package dolphin

import (
	"bufio"
	"encoding/json"
	"net/http/httptest"
	"strings"
)

var AccessToken string

func XTestSysUserLogin() {
	reader := bufio.NewReader(strings.NewReader(`{"domain": "localhost","name": "admin","password": "admin"}`))
	httpTools.Post("/api/sys/user/login", reader, func(w *httptest.ResponseRecorder) {
		type (
			Data struct {
				AccessToken  string `json:"access_token"`
				RefreshToken string `json:"refresh_token"`
			}
			AutoGenerated struct {
				Code int  `json:"code"`
				Data Data `json:"data"`
			}
		)
		ret := AutoGenerated{}
		json.Unmarshal(w.Body.Bytes(), &ret)
		AccessToken = ret.Data.AccessToken
	})
}

func XTestSysMenuPage(t testingT) {
	httpTools.Get("/api/sys/menu/page", func(w *httptest.ResponseRecorder) {
		type AutoGenerated struct {
			Code int    `json:"code"`
			Msg  string `json:"msg"`
		}
		if w.Code != 200 {
			t.Errorf("SysUserLogin = %v want %v", w.Code, 401)
		}
		ret := AutoGenerated{}
		json.Unmarshal(w.Body.Bytes(), &ret)
		if ret.Msg != "invalid_domain" {
			t.Errorf("SysMenuPage = %v want %v", ret.Msg, "invalid_domain")
		}
	})
}

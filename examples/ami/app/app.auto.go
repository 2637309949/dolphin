// Code generated by dol build. DO NOT EDIT.
// source: auto.go

package app

import (
	"github.com/2637309949/dolphin/packages/viper"
	"github.com/2637309949/dolphin/platform/util"
)

// Name project
var Name = "ami"

// Ami defined
type Ami struct {
	Add,
	Get func(ctx *Context)
}

// NewAmi defined
func NewAmi() *Ami {
	ctr := &Ami{}
	ctr.Add = AmiAdd
	ctr.Get = AmiGet
	return ctr
}

// AmiRoutes defined
func AmiRoutes(engine *Engine) {
	group := engine.Group(viper.GetString("http.prefix"))
	group.Handle("POST", "/ami/add", Auth("token"), AmiInstance.Add)
	group.Handle("GET", "/ami/get", Auth("token"), AmiInstance.Get)
}

// AmiInstance defined
var AmiInstance = NewAmi()

// SyncModel defined
func SyncModel() error {
	return nil
}

// SyncController defined
func SyncController() error {
	AmiRoutes(App)
	return nil
}

// SyncService defined
func SyncService() error {
	return nil
}

// Executor defined
var Executor = util.NewExecutor(SyncModel, SyncController, SyncService)

func init() {
	if err := Executor.Execute(); err != nil {
		panic(err)
	}
}

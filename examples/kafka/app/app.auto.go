// Code generated by dol build. DO NOT EDIT.
// source: auto.go

package app

import (
	"github.com/2637309949/dolphin/packages/viper"
	"github.com/2637309949/dolphin/platform/util"
)

// Name project
var Name = "kafka"

// Kafka defined
type Kafka struct {
	Add,
	Get func(ctx *Context)
}

// NewKafka defined
func NewKafka() *Kafka {
	ctr := &Kafka{}
	ctr.Add = KafkaAdd
	ctr.Get = KafkaGet
	return ctr
}

// KafkaRoutes defined
func KafkaRoutes(engine *Engine) {
	group := engine.Group(viper.GetString("http.prefix"))
	group.Handle("POST", "/kafka/add", Auth, KafkaInstance.Add)
	group.Handle("GET", "/kafka/get", Auth, KafkaInstance.Get)
}

// KafkaInstance defined
var KafkaInstance = NewKafka()

// SyncModel defined
func SyncModel() error {

	return nil
}

// SyncCtr defined
func SyncCtr() error {
	KafkaRoutes(App)
	return nil
}

// SyncService defined
func SyncService() error {
	return nil
}

// Executor defined
var Executor = util.NewExecutor(SyncModel, SyncCtr, SyncService)

func init() {
	if err := Executor.Execute(); err != nil {
		panic(err)
	}
}

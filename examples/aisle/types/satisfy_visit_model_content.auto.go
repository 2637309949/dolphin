// Code generated by dol build. DO NOT EDIT.
// source: auto.go

package types

import (
	"encoding/json"

	"github.com/2637309949/dolphin/packages/null"
)

// SatisfyVisitModelContent defined
type SatisfyVisitModelContent struct {
	// SVMCId defined
	SVMCId null.Int `xorm:"int(11) pk notnull autoincr 's_v_m_c_id'" json:"s_v_m_c_id" form:"s_v_m_c_id" xml:"s_v_m_c_id"`
	// SatisfyVisitCustomerType defined
	SatisfyVisitCustomerType null.Int `xorm:"int(11) 'satisfy_visit_customer_type'" json:"satisfy_visit_customer_type" form:"satisfy_visit_customer_type" xml:"satisfy_visit_customer_type"`
	// SatisfyVisitType defined
	SatisfyVisitType null.Int `xorm:"int(11) 'satisfy_visit_type'" json:"satisfy_visit_type" form:"satisfy_visit_type" xml:"satisfy_visit_type"`
	// Content defined
	Content null.String `xorm:"varchar(500) 'content'" json:"content" form:"content" xml:"content"`
	// SvmId defined
	SvmId null.Int `xorm:"int(11) 'svm_id'" json:"svm_id" form:"svm_id" xml:"svm_id"`
	// Creater defined
	Creater null.String `xorm:"varchar(36) 'creater'" json:"creater" form:"creater" xml:"creater"`
	// CreateDate defined
	CreateDate null.Time `xorm:"datetime 'create_date'" json:"create_date" form:"create_date" xml:"create_date"`
	// Updater defined
	Updater null.String `xorm:"varchar(36) 'updater'" json:"updater" form:"updater" xml:"updater"`
	// UpdateDate defined
	UpdateDate null.Time `xorm:"datetime 'update_date'" json:"update_date" form:"update_date" xml:"update_date"`
	// IsDelete defined
	IsDelete null.Int `xorm:"notnull 'is_delete'" json:"is_delete" form:"is_delete" xml:"is_delete"`
	// Fraction defined
	Fraction null.Int `xorm:"int(11) 'fraction'" json:"fraction" form:"fraction" xml:"fraction"`
}

// TableName table name of defined SatisfyVisitModelContent
func (m *SatisfyVisitModelContent) TableName() string {
	return "satisfy_visit_model_content"
}

func (r *SatisfyVisitModelContent) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func UnmarshalSatisfyVisitModelContent(data []byte) (SatisfyVisitModelContent, error) {
	var r SatisfyVisitModelContent
	err := json.Unmarshal(data, &r)
	return r, err
}

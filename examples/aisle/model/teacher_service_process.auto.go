// Code generated by dol build. DO NOT EDIT.
// source: auto.go

package model

import (
	"encoding/json"
	"reflect"

	"github.com/2637309949/dolphin/packages/null"
	"github.com/2637309949/dolphin/packages/xormplus/xorm"
	"github.com/2637309949/dolphin/packages/xormplus/xorm/caches"
	"github.com/2637309949/dolphin/packages/xormplus/xorm/tags"
)

// TeacherServiceProcess defined
type TeacherServiceProcess struct {
	// TSPId defined
	TSPId null.Int `xorm:"int(11) pk notnull autoincr 't_s_p_id'" json:"t_s_p_id" form:"t_s_p_id" xml:"t_s_p_id"`
	// TspRemark defined
	TspRemark null.String `xorm:"varchar(2000) 'tsp_remark'" json:"tsp_remark" form:"tsp_remark" xml:"tsp_remark"`
	// TspOrder defined
	TspOrder null.Int `xorm:"int(11) 'tsp_order'" json:"tsp_order" form:"tsp_order" xml:"tsp_order"`
	// Creater defined
	Creater null.String `xorm:"varchar(36) 'creater'" json:"creater" form:"creater" xml:"creater"`
	// CreateDate defined
	CreateDate null.Time `xorm:"datetime 'create_date'" json:"create_date" form:"create_date" xml:"create_date"`
	// Updater defined
	Updater null.String `xorm:"varchar(36) 'updater'" json:"updater" form:"updater" xml:"updater"`
	// UpdateDate defined
	UpdateDate null.Time `xorm:"datetime 'update_date'" json:"update_date" form:"update_date" xml:"update_date"`
	// Isdelete defined
	Isdelete null.Int `xorm:"notnull 'isdelete'" json:"isdelete" form:"isdelete" xml:"isdelete"`
	// CpcId defined
	CpcId null.Int `xorm:"int(11) 'cpc_id'" json:"cpc_id" form:"cpc_id" xml:"cpc_id"`
	// TspNumber defined
	TspNumber null.Int `xorm:"int(11) 'tsp_number'" json:"tsp_number" form:"tsp_number" xml:"tsp_number"`
}

// Marshal defined
func (m *TeacherServiceProcess) Marshal() ([]byte, error) {
	return json.Marshal(m)
}

// Unmarshal defined
func (m *TeacherServiceProcess) Unmarshal(data []byte) error {
	return json.Unmarshal(data, m)
}

// ToMap defined
func (m *TeacherServiceProcess) ToMap() (map[string]interface{}, error) {
	byt, err := m.Marshal()
	if err != nil {
		return nil, err
	}
	itf := map[string]interface{}{}
	err = json.Unmarshal(byt, &itf)
	return itf, err
}

// FromMap defined
func (m *TeacherServiceProcess) FromMap(fm map[string]interface{}) error {
	byt, err := json.Marshal(fm)
	if err != nil {
		return err
	}
	err = m.Unmarshal(byt)
	return err
}

// Parser defined
func (m *TeacherServiceProcess) Parser(db *xorm.Engine) *tags.Parser {
	return tags.NewParser("xorm", db.Dialect(), db.DB().Mapper, db.DB().Mapper, caches.NewManager())
}

// PrimaryKeys defined
func (m *TeacherServiceProcess) PrimaryKeys(db *xorm.Engine) ([]string, error) {
	v := reflect.Indirect(reflect.ValueOf(m))
	table, err := m.Parser(db).Parse(v)
	return table.PrimaryKeys, err
}

// TableName table name of defined TeacherServiceProcess
func (m *TeacherServiceProcess) TableName() string {
	return "teacher_service_process"
}

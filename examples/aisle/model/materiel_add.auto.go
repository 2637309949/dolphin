// Code generated by dol build. DO NOT EDIT.
// source: auto.go

package model

import (
	"reflect"

	"github.com/2637309949/dolphin/packages/null"
	"github.com/2637309949/dolphin/packages/xormplus/xorm"
	"github.com/2637309949/dolphin/packages/xormplus/xorm/caches"
	"github.com/2637309949/dolphin/packages/xormplus/xorm/tags"
)

// MaterielAdd defined
type MaterielAdd struct {
	//
	MaterielId null.Int `xorm:"int(11) 'materiel_id'" json:"materiel_id" form:"materiel_id" xml:"materiel_id"`
	//
	AddNum null.Int `xorm:"int(11) 'add_num'" json:"add_num" form:"add_num" xml:"add_num"`
	//
	AddMoney null.Float `xorm:"float(11,2) 'add_money'" json:"add_money" form:"add_money" xml:"add_money"`
	//
	Creater null.String `xorm:"varchar(36) 'creater'" json:"creater" form:"creater" xml:"creater"`
	//
	Updater null.String `xorm:"varchar(36) 'updater'" json:"updater" form:"updater" xml:"updater"`
	//
	MAId null.Int `xorm:"int(11) pk notnull autoincr 'm_a_id'" json:"m_a_id" form:"m_a_id" xml:"m_a_id"`
	//
	CreateDate null.Time `xorm:"datetime 'create_date'" json:"create_date" form:"create_date" xml:"create_date"`
	//
	UpdateDate null.Time `xorm:"datetime 'update_date'" json:"update_date" form:"update_date" xml:"update_date"`
	//
	AddReason null.Int `xorm:"int(11) 'add_reason'" json:"add_reason" form:"add_reason" xml:"add_reason"`
	//
	AddObject null.Int `xorm:"int(11) 'add_object'" json:"add_object" form:"add_object" xml:"add_object"`
	//
	Isdelete null.Int `xorm:"int(11) 'isdelete'" json:"isdelete" form:"isdelete" xml:"isdelete"`
}

// Parser defined
func (m *SysCommentReply) Parser(db *xorm.Engine) *tags.Parser {
	return tags.NewParser("xorm", db.Dialect(), db.DB().Mapper, db.DB().Mapper, caches.NewManager())
}

// PrimaryKeys defined
func (m *SysCommentReply) PrimaryKeys(db *xorm.Engine) ([]string, error) {
	v := reflect.Indirect(reflect.ValueOf(m))
	table, err := m.Parser(db).Parse(v)
	return table.PrimaryKeys, err
}

// TableName table name of defined MaterielAdd
func (m *MaterielAdd) TableName() string {
	return "materiel_add"
}

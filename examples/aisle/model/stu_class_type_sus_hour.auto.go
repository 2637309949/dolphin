// Code generated by dol build. DO NOT EDIT.
// source: auto.go

package model

import (
	"encoding/json"
	"reflect"

	"github.com/2637309949/dolphin/packages/decimal"
	"github.com/2637309949/dolphin/packages/null"
	"github.com/2637309949/dolphin/packages/xormplus/xorm"
	"github.com/2637309949/dolphin/packages/xormplus/xorm/caches"
	"github.com/2637309949/dolphin/packages/xormplus/xorm/tags"
)

// StuClassTypeSusHour defined
type StuClassTypeSusHour struct {
	// SCTSHId defined
	SCTSHId null.Int `xorm:"int(11) pk notnull autoincr 's_c_t_s_h_id'" json:"s_c_t_s_h_id" form:"s_c_t_s_h_id" xml:"s_c_t_s_h_id"`
	// PkStu defined
	PkStu null.Int `xorm:"int(11) 'pk_stu'" json:"pk_stu" form:"pk_stu" xml:"pk_stu"`
	// PkCt defined
	PkCt null.Int `xorm:"int(11) 'pk_ct'" json:"pk_ct" form:"pk_ct" xml:"pk_ct"`
	// SusHour defined
	SusHour null.Float `xorm:"float(11,2) 'sus_hour'" json:"sus_hour" form:"sus_hour" xml:"sus_hour"`
	// StartHour defined
	StartHour null.Float `xorm:"float(11,2) 'start_hour'" json:"start_hour" form:"start_hour" xml:"start_hour"`
	// EndHour defined
	EndHour null.Float `xorm:"float(11,2) 'end_hour'" json:"end_hour" form:"end_hour" xml:"end_hour"`
	// Creater defined
	Creater null.String `xorm:"varchar(36) 'creater'" json:"creater" form:"creater" xml:"creater"`
	// CreateDate defined
	CreateDate null.Time `xorm:"datetime 'create_date'" json:"create_date" form:"create_date" xml:"create_date"`
	// Updater defined
	Updater null.String `xorm:"varchar(36) 'updater'" json:"updater" form:"updater" xml:"updater"`
	// UpdateDate defined
	UpdateDate null.Time `xorm:"datetime 'update_date'" json:"update_date" form:"update_date" xml:"update_date"`
	// Isdelete defined
	Isdelete null.Int `xorm:"notnull 'isdelete'" json:"isdelete" form:"isdelete" xml:"isdelete"`
	// OnePrice defined
	OnePrice decimal.Decimal `xorm:"decimal(50,3) 'one_price'" json:"one_price" form:"one_price" xml:"one_price"`
	// YpHour defined
	YpHour null.Float `xorm:"float(50,2) 'yp_hour'" json:"yp_hour" form:"yp_hour" xml:"yp_hour"`
	// UseHour defined
	UseHour null.Float `xorm:"float(50,2) 'use_hour'" json:"use_hour" form:"use_hour" xml:"use_hour"`
	// PkClass defined
	PkClass null.Int `xorm:"int(11) 'pk_class'" json:"pk_class" form:"pk_class" xml:"pk_class"`
	// PkSch defined
	PkSch null.Int `xorm:"int(11) 'pk_sch'" json:"pk_sch" form:"pk_sch" xml:"pk_sch"`
}

// Marshal defined
func (m *StuClassTypeSusHour) Marshal() ([]byte, error) {
	return json.Marshal(m)
}

// Unmarshal defined
func (m *StuClassTypeSusHour) Unmarshal(data []byte) error {
	return json.Unmarshal(data, m)
}

// ToMap defined
func (m *StuClassTypeSusHour) ToMap() (map[string]interface{}, error) {
	byt, err := m.Marshal()
	if err != nil {
		return nil, err
	}
	itf := map[string]interface{}{}
	err = json.Unmarshal(byt, &itf)
	return itf, err
}

// FromMap defined
func (m *StuClassTypeSusHour) FromMap(fm map[string]interface{}) error {
	byt, err := json.Marshal(fm)
	if err != nil {
		return err
	}
	err = m.Unmarshal(byt)
	return err
}

// Parser defined
func (m *StuClassTypeSusHour) Parser(db *xorm.Engine) *tags.Parser {
	return tags.NewParser("xorm", db.Dialect(), db.DB().Mapper, db.DB().Mapper, caches.NewManager())
}

// PrimaryKeys defined
func (m *StuClassTypeSusHour) PrimaryKeys(db *xorm.Engine) ([]string, error) {
	v := reflect.Indirect(reflect.ValueOf(m))
	table, err := m.Parser(db).Parse(v)
	return table.PrimaryKeys, err
}

// TableName table name of defined StuClassTypeSusHour
func (m *StuClassTypeSusHour) TableName() string {
	return "stu_class_type_sus_hour"
}

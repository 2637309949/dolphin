// Code generated by dol build. DO NOT EDIT.
// source: auto.go

package model

import (
	"encoding/json"
	"errors"
	"reflect"

	"github.com/2637309949/dolphin/packages/null"
	"github.com/2637309949/dolphin/packages/xormplus/xorm"
	"github.com/2637309949/dolphin/packages/xormplus/xorm/caches"
	"github.com/2637309949/dolphin/packages/xormplus/xorm/tags"
)

// OtomSysSet defined
type OtomSysSet struct {
	// OSSId defined
	OSSId null.Int `xorm:"int(11) pk notnull autoincr 'o_s_s_id'" json:"o_s_s_id" form:"o_s_s_id" xml:"o_s_s_id"`
	// CreateDate defined
	CreateDate null.Time `xorm:"datetime 'create_date'" json:"create_date" form:"create_date" xml:"create_date"`
	// UpdateDate defined
	UpdateDate null.Time `xorm:"datetime 'update_date'" json:"update_date" form:"update_date" xml:"update_date"`
	// OtAppraise defined
	OtAppraise null.Int `xorm:"int(11) 'ot_appraise'" json:"ot_appraise" form:"ot_appraise" xml:"ot_appraise"`
	// OtLateclass defined
	OtLateclass null.Int `xorm:"int(11) 'ot_lateclass'" json:"ot_lateclass" form:"ot_lateclass" xml:"ot_lateclass"`
	// OtAheadclass defined
	OtAheadclass null.Int `xorm:"int(11) 'ot_aheadclass'" json:"ot_aheadclass" form:"ot_aheadclass" xml:"ot_aheadclass"`
	// OtDismissclass defined
	OtDismissclass null.Int `xorm:"int(11) 'ot_dismissclass'" json:"ot_dismissclass" form:"ot_dismissclass" xml:"ot_dismissclass"`
	// OtExtendclass defined
	OtExtendclass null.Int `xorm:"int(11) 'ot_extendclass'" json:"ot_extendclass" form:"ot_extendclass" xml:"ot_extendclass"`
	// OtWelcome defined
	OtWelcome null.String `xorm:"varchar(200) 'ot_welcome'" json:"ot_welcome" form:"ot_welcome" xml:"ot_welcome"`
	// OtSaybye defined
	OtSaybye null.String `xorm:"varchar(200) 'ot_saybye'" json:"ot_saybye" form:"ot_saybye" xml:"ot_saybye"`
	// OtAutoCard defined
	OtAutoCard null.Int `xorm:"int(11) 'ot_auto_card'" json:"ot_auto_card" form:"ot_auto_card" xml:"ot_auto_card"`
	// OtImg defined
	OtImg null.String `xorm:"varchar(200) 'ot_img'" json:"ot_img" form:"ot_img" xml:"ot_img"`
	// OtCopyright defined
	OtCopyright null.String `xorm:"varchar(200) 'ot_copyright'" json:"ot_copyright" form:"ot_copyright" xml:"ot_copyright"`
	// OtLianxu defined
	OtLianxu null.Int `xorm:"int(11) 'ot_lianxu'" json:"ot_lianxu" form:"ot_lianxu" xml:"ot_lianxu"`
	// OtLessonItvl defined
	OtLessonItvl null.Int `xorm:"int(11) 'ot_lesson_itvl'" json:"ot_lesson_itvl" form:"ot_lesson_itvl" xml:"ot_lesson_itvl"`
	// PrintTimes defined
	PrintTimes null.Int `xorm:"int(11) 'print_times'" json:"print_times" form:"print_times" xml:"print_times"`
	// OtAppraiseSeconds defined
	OtAppraiseSeconds null.Int `xorm:"int(11) 'ot_appraise_seconds'" json:"ot_appraise_seconds" form:"ot_appraise_seconds" xml:"ot_appraise_seconds"`
	// OtTitle defined
	OtTitle null.String `xorm:"varchar(200) 'ot_title'" json:"ot_title" form:"ot_title" xml:"ot_title"`
	// SkTitle defined
	SkTitle null.String `xorm:"varchar(200) 'sk_title'" json:"sk_title" form:"sk_title" xml:"sk_title"`
	// Creater defined
	Creater null.String `xorm:"varchar(36) 'creater'" json:"creater" form:"creater" xml:"creater"`
	// Updater defined
	Updater null.String `xorm:"varchar(36) 'updater'" json:"updater" form:"updater" xml:"updater"`
	// Isdelete defined
	Isdelete null.Int `xorm:"int(11) 'isdelete'" json:"isdelete" form:"isdelete" xml:"isdelete"`
}

// Marshal defined
func (m *OtomSysSet) With(s interface{}) (interface{}, error) {
	if reflect.ValueOf(s).Kind() != reflect.Ptr {
		return nil, errors.New("ptr required")
	}
	mbt, err := json.Marshal(m)
	if err != nil {
		return nil, err
	}
	if err := json.Unmarshal(mbt, s); err != nil {
		return nil, err
	}
	return s, err
}

// Marshal defined
func (m *OtomSysSet) Marshal() ([]byte, error) {
	return json.Marshal(m)
}

// Unmarshal defined
func (m *OtomSysSet) Unmarshal(data []byte) error {
	return json.Unmarshal(data, m)
}

// ToMap defined
func (m *OtomSysSet) ToMap() (map[string]interface{}, error) {
	byt, err := m.Marshal()
	if err != nil {
		return nil, err
	}
	itf := map[string]interface{}{}
	err = json.Unmarshal(byt, &itf)
	return itf, err
}

// FromMap defined
func (m *OtomSysSet) FromMap(fm map[string]interface{}) error {
	byt, err := json.Marshal(fm)
	if err != nil {
		return err
	}
	err = m.Unmarshal(byt)
	return err
}

// Parser defined
func (m *OtomSysSet) Parser(db *xorm.Engine) *tags.Parser {
	return tags.NewParser("xorm", db.Dialect(), db.DB().Mapper, db.DB().Mapper, caches.NewManager())
}

// PrimaryKeys defined
func (m *OtomSysSet) PrimaryKeys(db *xorm.Engine) ([]string, error) {
	v := reflect.Indirect(reflect.ValueOf(m))
	table, err := m.Parser(db).Parse(v)
	return table.PrimaryKeys, err
}

// TableName table name of defined OtomSysSet
func (m *OtomSysSet) TableName() string {
	return "otom_sys_set"
}

// Code generated by dol build. DO NOT EDIT.
// source: auto.go

package model

import (
	"encoding/json"
	"errors"
	"reflect"

	"github.com/2637309949/dolphin/packages/null"
	"github.com/2637309949/dolphin/packages/xormplus/xorm"
	"github.com/2637309949/dolphin/packages/xormplus/xorm/caches"
	"github.com/2637309949/dolphin/packages/xormplus/xorm/tags"
)

// StudentVisit defined
type StudentVisit struct {
	// SVId defined
	SVId null.Int `xorm:"int(11) pk notnull autoincr 's_v_id'" json:"s_v_id" form:"s_v_id" xml:"s_v_id"`
	// CreateDate defined
	CreateDate null.Time `xorm:"datetime 'create_date'" json:"create_date" form:"create_date" xml:"create_date"`
	// UpdateDate defined
	UpdateDate null.Time `xorm:"datetime 'update_date'" json:"update_date" form:"update_date" xml:"update_date"`
	// StuId defined
	StuId null.Int `xorm:"int(11) 'stu_id'" json:"stu_id" form:"stu_id" xml:"stu_id"`
	// SvContent defined
	SvContent null.String `xorm:"varchar(1000) 'sv_content'" json:"sv_content" form:"sv_content" xml:"sv_content"`
	// StartTime defined
	StartTime null.Time `xorm:"datetime 'start_time'" json:"start_time" form:"start_time" xml:"start_time"`
	// EndTime defined
	EndTime null.Time `xorm:"datetime 'end_time'" json:"end_time" form:"end_time" xml:"end_time"`
	// NextContent defined
	NextContent null.String `xorm:"varchar(1000) 'next_content'" json:"next_content" form:"next_content" xml:"next_content"`
	// NextTime defined
	NextTime null.Time `xorm:"datetime 'next_time'" json:"next_time" form:"next_time" xml:"next_time"`
	// StudentType defined
	StudentType null.Int `xorm:"int(11) 'student_type'" json:"student_type" form:"student_type" xml:"student_type"`
	// Creater defined
	Creater null.String `xorm:"varchar(36) 'creater'" json:"creater" form:"creater" xml:"creater"`
	// Updater defined
	Updater null.String `xorm:"varchar(36) 'updater'" json:"updater" form:"updater" xml:"updater"`
	// ScId defined
	ScId null.Int `xorm:"int(11) 'sc_id'" json:"sc_id" form:"sc_id" xml:"sc_id"`
	// StuOrder defined
	StuOrder null.Float `xorm:"float(11,2) 'stu_order'" json:"stu_order" form:"stu_order" xml:"stu_order"`
	// Isdelete defined
	Isdelete null.Int `xorm:"int(11) 'isdelete'" json:"isdelete" form:"isdelete" xml:"isdelete"`
	// RevivalDate defined
	RevivalDate null.Time `xorm:"datetime 'revival_date'" json:"revival_date" form:"revival_date" xml:"revival_date"`
	// KhType defined
	KhType null.Int `xorm:"int(11) 'kh_type'" json:"kh_type" form:"kh_type" xml:"kh_type"`
	// StuSysStatus defined
	StuSysStatus null.Int `xorm:"int(11) 'stu_sys_status'" json:"stu_sys_status" form:"stu_sys_status" xml:"stu_sys_status"`
	// CallType defined
	CallType null.Int `xorm:"int(11) 'call_type'" json:"call_type" form:"call_type" xml:"call_type"`
	// MaType defined
	MaType null.Int `xorm:"int(11) 'ma_type'" json:"ma_type" form:"ma_type" xml:"ma_type"`
	// NetworkDetailId defined
	NetworkDetailId null.Int `xorm:"int(11) 'network_detail_id'" json:"network_detail_id" form:"network_detail_id" xml:"network_detail_id"`
	// SyId defined
	SyId null.Int `xorm:"int(11) 'sy_id'" json:"sy_id" form:"sy_id" xml:"sy_id"`
	// SvuserId defined
	SvuserId null.Int `xorm:"int(11) 'svuser_id'" json:"svuser_id" form:"svuser_id" xml:"svuser_id"`
	// LeaderPostil defined
	LeaderPostil null.String `xorm:"varchar(2000) 'leader_postil'" json:"leader_postil" form:"leader_postil" xml:"leader_postil"`
	// LeaderPostilTime defined
	LeaderPostilTime null.Time `xorm:"datetime 'leader_postil_time'" json:"leader_postil_time" form:"leader_postil_time" xml:"leader_postil_time"`
	// HfStuphone defined
	HfStuphone null.String `xorm:"varchar(11) 'hf_stuphone'" json:"hf_stuphone" form:"hf_stuphone" xml:"hf_stuphone"`
	// OnlyId defined
	OnlyId null.String `xorm:"varchar(10000) 'only_id'" json:"only_id" form:"only_id" xml:"only_id"`
	// HfrType defined
	HfrType null.String `xorm:"varchar(1000) 'hfr_type'" json:"hfr_type" form:"hfr_type" xml:"hfr_type"`
	// TmkVisitStatus defined
	TmkVisitStatus null.Int `xorm:"int(11) 'tmk_visit_status'" json:"tmk_visit_status" form:"tmk_visit_status" xml:"tmk_visit_status"`
}

// Marshal defined
func (m *StudentVisit) With(s interface{}) (interface{}, error) {
	if reflect.ValueOf(s).Kind() != reflect.Ptr {
		return nil, errors.New("ptr required")
	}
	mbt, err := json.Marshal(m)
	if err != nil {
		return nil, err
	}
	if err := json.Unmarshal(mbt, s); err != nil {
		return nil, err
	}
	return s, err
}

// Marshal defined
func (m *StudentVisit) Marshal() ([]byte, error) {
	return json.Marshal(m)
}

// Unmarshal defined
func (m *StudentVisit) Unmarshal(data []byte) error {
	return json.Unmarshal(data, m)
}

// ToMap defined
func (m *StudentVisit) ToMap() (map[string]interface{}, error) {
	byt, err := m.Marshal()
	if err != nil {
		return nil, err
	}
	itf := map[string]interface{}{}
	err = json.Unmarshal(byt, &itf)
	return itf, err
}

// FromMap defined
func (m *StudentVisit) FromMap(fm map[string]interface{}) error {
	byt, err := json.Marshal(fm)
	if err != nil {
		return err
	}
	err = m.Unmarshal(byt)
	return err
}

// Parser defined
func (m *StudentVisit) Parser(db *xorm.Engine) *tags.Parser {
	return tags.NewParser("xorm", db.Dialect(), db.DB().Mapper, db.DB().Mapper, caches.NewManager())
}

// PrimaryKeys defined
func (m *StudentVisit) PrimaryKeys(db *xorm.Engine) ([]string, error) {
	v := reflect.Indirect(reflect.ValueOf(m))
	table, err := m.Parser(db).Parse(v)
	return table.PrimaryKeys, err
}

// TableName table name of defined StudentVisit
func (m *StudentVisit) TableName() string {
	return "student_visit"
}

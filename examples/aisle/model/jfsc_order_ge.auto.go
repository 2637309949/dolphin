// Code generated by dol build. DO NOT EDIT.
// source: auto.go

package model

import (
	"encoding/json"
	"reflect"

	"github.com/2637309949/dolphin/packages/null"
	"github.com/2637309949/dolphin/packages/xormplus/xorm"
	"github.com/2637309949/dolphin/packages/xormplus/xorm/caches"
	"github.com/2637309949/dolphin/packages/xormplus/xorm/tags"
)

// JfscOrderGe defined
type JfscOrderGe struct {
	// JOGId defined
	JOGId null.Int `xorm:"int(11) pk notnull autoincr 'j_o_g_id'" json:"j_o_g_id" form:"j_o_g_id" xml:"j_o_g_id"`
	// JfscOrderid defined
	JfscOrderid null.Int `xorm:"int(11) 'jfsc_orderid'" json:"jfsc_orderid" form:"jfsc_orderid" xml:"jfsc_orderid"`
	// GeId defined
	GeId null.Int `xorm:"int(11) 'ge_id'" json:"ge_id" form:"ge_id" xml:"ge_id"`
	// Creater defined
	Creater null.String `xorm:"varchar(36) 'creater'" json:"creater" form:"creater" xml:"creater"`
	// CreateDate defined
	CreateDate null.Time `xorm:"datetime 'create_date'" json:"create_date" form:"create_date" xml:"create_date"`
	// Updater defined
	Updater null.String `xorm:"varchar(36) 'updater'" json:"updater" form:"updater" xml:"updater"`
	// UpdateDate defined
	UpdateDate null.Time `xorm:"datetime 'update_date'" json:"update_date" form:"update_date" xml:"update_date"`
	// Isdelete defined
	Isdelete null.Int `xorm:"notnull 'isdelete'" json:"isdelete" form:"isdelete" xml:"isdelete"`
	// TacheckState defined
	TacheckState null.Int `xorm:"int(11) 'tacheck_state'" json:"tacheck_state" form:"tacheck_state" xml:"tacheck_state"`
	// TacheckDesc defined
	TacheckDesc null.String `xorm:"varchar(1000) 'tacheck_desc'" json:"tacheck_desc" form:"tacheck_desc" xml:"tacheck_desc"`
	// ZbcheckState defined
	ZbcheckState null.Int `xorm:"int(11) 'zbcheck_state'" json:"zbcheck_state" form:"zbcheck_state" xml:"zbcheck_state"`
	// ZbcheckDesc defined
	ZbcheckDesc null.String `xorm:"varchar(1000) 'zbcheck_desc'" json:"zbcheck_desc" form:"zbcheck_desc" xml:"zbcheck_desc"`
	// JfscddxState defined
	JfscddxState null.Int `xorm:"int(11) default(1562) 'jfscddx_state'" json:"jfscddx_state" form:"jfscddx_state" xml:"jfscddx_state"`
}

// Marshal defined
func (m *JfscOrderGe) Marshal() ([]byte, error) {
	return json.Marshal(m)
}

// Unmarshal defined
func (m *JfscOrderGe) Unmarshal(data []byte) error {
	return json.Unmarshal(data, m)
}

// ToMap defined
func (m *JfscOrderGe) ToMap() (map[string]interface{}, error) {
	byt, err := m.Marshal()
	if err != nil {
		return nil, err
	}
	itf := map[string]interface{}{}
	err = json.Unmarshal(byt, &itf)
	return itf, err
}

// FromMap defined
func (m *JfscOrderGe) FromMap(fm map[string]interface{}) error {
	byt, err := json.Marshal(fm)
	if err != nil {
		return err
	}
	err = m.Unmarshal(byt)
	return err
}

// Parser defined
func (m *JfscOrderGe) Parser(db *xorm.Engine) *tags.Parser {
	return tags.NewParser("xorm", db.Dialect(), db.DB().Mapper, db.DB().Mapper, caches.NewManager())
}

// PrimaryKeys defined
func (m *JfscOrderGe) PrimaryKeys(db *xorm.Engine) ([]string, error) {
	v := reflect.Indirect(reflect.ValueOf(m))
	table, err := m.Parser(db).Parse(v)
	return table.PrimaryKeys, err
}

// TableName table name of defined JfscOrderGe
func (m *JfscOrderGe) TableName() string {
	return "jfsc_order_ge"
}

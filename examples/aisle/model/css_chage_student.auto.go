// Code generated by dol build. DO NOT EDIT.
// source: auto.go

package model

import (
	"reflect"

	"github.com/2637309949/dolphin/packages/null"
	"github.com/2637309949/dolphin/packages/xormplus/xorm"
	"github.com/2637309949/dolphin/packages/xormplus/xorm/caches"
	"github.com/2637309949/dolphin/packages/xormplus/xorm/tags"
)

// CssChageStudent defined
type CssChageStudent struct {
	//
	CCSId null.Int `xorm:"int(11) pk notnull autoincr 'c_c_s_id'" json:"c_c_s_id" form:"c_c_s_id" xml:"c_c_s_id"`
	//
	PkCss null.Int `xorm:"int(11) 'pk_css'" json:"pk_css" form:"pk_css" xml:"pk_css"`
	//
	PkSct null.Int `xorm:"int(11) 'pk_sct'" json:"pk_sct" form:"pk_sct" xml:"pk_sct"`
	//
	Creater null.String `xorm:"varchar(36) 'creater'" json:"creater" form:"creater" xml:"creater"`
	//
	CreateDate null.Time `xorm:"datetime 'create_date'" json:"create_date" form:"create_date" xml:"create_date"`
	//
	Updater null.String `xorm:"varchar(36) 'updater'" json:"updater" form:"updater" xml:"updater"`
	//
	UpdateDate null.Time `xorm:"datetime 'update_date'" json:"update_date" form:"update_date" xml:"update_date"`
	//
	Isdelete null.Int `xorm:"notnull 'isdelete'" json:"isdelete" form:"isdelete" xml:"isdelete"`
	//
	PkOldStu null.Int `xorm:"int(11) 'pk_old_stu'" json:"pk_old_stu" form:"pk_old_stu" xml:"pk_old_stu"`
	//
	PkNewStu null.Int `xorm:"int(11) 'pk_new_stu'" json:"pk_new_stu" form:"pk_new_stu" xml:"pk_new_stu"`
	//
	PkCs null.Int `xorm:"int(11) 'pk_cs'" json:"pk_cs" form:"pk_cs" xml:"pk_cs"`
	//
	PkOldSct null.Int `xorm:"int(11) 'pk_old_sct'" json:"pk_old_sct" form:"pk_old_sct" xml:"pk_old_sct"`
	//
	IfKouHour null.Int `xorm:"int(11) 'if_kou_hour'" json:"if_kou_hour" form:"if_kou_hour" xml:"if_kou_hour"`
	//
	IfMz null.Int `xorm:"int(11) 'if_mz'" json:"if_mz" form:"if_mz" xml:"if_mz"`
	//
	OldScsId null.Int `xorm:"int(11) 'old_scs_id'" json:"old_scs_id" form:"old_scs_id" xml:"old_scs_id"`
}

// Parser defined
func (m *CssChageStudent) Parser(db *xorm.Engine) *tags.Parser {
	return tags.NewParser("xorm", db.Dialect(), db.DB().Mapper, db.DB().Mapper, caches.NewManager())
}

// PrimaryKeys defined
func (m *CssChageStudent) PrimaryKeys(db *xorm.Engine) ([]string, error) {
	v := reflect.Indirect(reflect.ValueOf(m))
	table, err := m.Parser(db).Parse(v)
	return table.PrimaryKeys, err
}

// TableName table name of defined CssChageStudent
func (m *CssChageStudent) TableName() string {
	return "css_chage_student"
}

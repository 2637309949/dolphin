// Code generated by dol build. DO NOT EDIT.
// source: auto.go

package model

import (
	"encoding/json"
	"errors"
	"reflect"

	"github.com/2637309949/dolphin/packages/null"
	"github.com/2637309949/dolphin/packages/xormplus/xorm"
	"github.com/2637309949/dolphin/packages/xormplus/xorm/caches"
	"github.com/2637309949/dolphin/packages/xormplus/xorm/tags"
)

// StudentAddAgreement defined
type StudentAddAgreement struct {
	// SAAId defined
	SAAId null.Int `xorm:"int(11) pk notnull autoincr 's_a_a_id'" json:"s_a_a_id" form:"s_a_a_id" xml:"s_a_a_id"`
	// PkStu defined
	PkStu null.Int `xorm:"int(11) 'pk_stu'" json:"pk_stu" form:"pk_stu" xml:"pk_stu"`
	// Creater defined
	Creater null.String `xorm:"varchar(36) 'creater'" json:"creater" form:"creater" xml:"creater"`
	// CreateDate defined
	CreateDate null.Time `xorm:"datetime 'create_date'" json:"create_date" form:"create_date" xml:"create_date"`
	// Updater defined
	Updater null.String `xorm:"varchar(36) 'updater'" json:"updater" form:"updater" xml:"updater"`
	// UpdateDate defined
	UpdateDate null.Time `xorm:"datetime 'update_date'" json:"update_date" form:"update_date" xml:"update_date"`
	// IsDelete defined
	IsDelete null.Int `xorm:"notnull 'is_delete'" json:"is_delete" form:"is_delete" xml:"is_delete"`
	// PkProType defined
	PkProType null.Int `xorm:"int(11) 'pk_pro_type'" json:"pk_pro_type" form:"pk_pro_type" xml:"pk_pro_type"`
	// PkSaam defined
	PkSaam null.Int `xorm:"int(11) 'pk_saam'" json:"pk_saam" form:"pk_saam" xml:"pk_saam"`
	// StuSign defined
	StuSign null.Int `xorm:"int(11) 'stu_sign'" json:"stu_sign" form:"stu_sign" xml:"stu_sign"`
	// JhrSign defined
	JhrSign null.Int `xorm:"int(11) 'jhr_sign'" json:"jhr_sign" form:"jhr_sign" xml:"jhr_sign"`
	// SqSign defined
	SqSign null.Int `xorm:"int(11) 'sq_sign'" json:"sq_sign" form:"sq_sign" xml:"sq_sign"`
	// StuSignDate defined
	StuSignDate null.Time `xorm:"datetime 'stu_sign_date'" json:"stu_sign_date" form:"stu_sign_date" xml:"stu_sign_date"`
	// YfSignDate defined
	YfSignDate null.Time `xorm:"datetime 'yf_sign_date'" json:"yf_sign_date" form:"yf_sign_date" xml:"yf_sign_date"`
	// PkSch defined
	PkSch null.Int `xorm:"int(11) 'pk_sch'" json:"pk_sch" form:"pk_sch" xml:"pk_sch"`
	// AgreeNum defined
	AgreeNum null.String `xorm:"varchar(20) 'agree_num'" json:"agree_num" form:"agree_num" xml:"agree_num"`
	// AgreementDate defined
	AgreementDate null.Time `xorm:"datetime 'agreement_date'" json:"agreement_date" form:"agreement_date" xml:"agreement_date"`
	// SaaDesc defined
	SaaDesc null.String `xorm:"varchar(1000) 'saa_desc'" json:"saa_desc" form:"saa_desc" xml:"saa_desc"`
	// ParentAuthSign defined
	ParentAuthSign null.Int `xorm:"int(11) 'parent_auth_sign'" json:"parent_auth_sign" form:"parent_auth_sign" xml:"parent_auth_sign"`
	// ParentAuthSignRemark defined
	ParentAuthSignRemark null.String `xorm:"varchar(1000) 'parent_auth_sign_remark'" json:"parent_auth_sign_remark" form:"parent_auth_sign_remark" xml:"parent_auth_sign_remark"`
	// CheckStatus defined
	CheckStatus null.Int `xorm:"int(11) default(1751) 'check_status'" json:"check_status" form:"check_status" xml:"check_status"`
	// CheckRemark defined
	CheckRemark null.String `xorm:"varchar(1000) 'check_remark'" json:"check_remark" form:"check_remark" xml:"check_remark"`
	// CheckUser defined
	CheckUser null.Int `xorm:"int(11) 'check_user'" json:"check_user" form:"check_user" xml:"check_user"`
	// CheckDate defined
	CheckDate null.Time `xorm:"datetime 'check_date'" json:"check_date" form:"check_date" xml:"check_date"`
	// ShifouUpdate defined
	ShifouUpdate null.Int `xorm:"int(11) 'shifou_update'" json:"shifou_update" form:"shifou_update" xml:"shifou_update"`
}

// With defined
func (m *StudentAddAgreement) With(s interface{}) (interface{}, error) {
	if reflect.ValueOf(s).Kind() != reflect.Ptr {
		return nil, errors.New("ptr required")
	}
	mbt, err := json.Marshal(m)
	if err != nil {
		return nil, err
	}
	if err := json.Unmarshal(mbt, s); err != nil {
		return nil, err
	}
	return s, err
}

// Marshal defined
func (m *StudentAddAgreement) Marshal() ([]byte, error) {
	return json.Marshal(m)
}

// Unmarshal defined
func (m *StudentAddAgreement) Unmarshal(data []byte) error {
	return json.Unmarshal(data, m)
}

// ToMap defined
func (m *StudentAddAgreement) ToMap() (map[string]interface{}, error) {
	byt, err := m.Marshal()
	if err != nil {
		return nil, err
	}
	itf := map[string]interface{}{}
	err = json.Unmarshal(byt, &itf)
	return itf, err
}

// FromMap defined
func (m *StudentAddAgreement) FromMap(fm map[string]interface{}) error {
	byt, err := json.Marshal(fm)
	if err != nil {
		return err
	}
	err = m.Unmarshal(byt)
	return err
}

// Parser defined
func (m *StudentAddAgreement) Parser(db *xorm.Engine) *tags.Parser {
	dialect, mapper, cache := db.Dialect(), db.DB().Mapper, caches.NewManager()
	return tags.NewParser("xorm", dialect, mapper, mapper, cache)
}

// PrimaryKeys defined
func (m *StudentAddAgreement) PrimaryKeys(db *xorm.Engine) ([]string, error) {
	v := reflect.Indirect(reflect.ValueOf(m))
	table, err := m.Parser(db).Parse(v)
	return table.PrimaryKeys, err
}

// TableName table name of defined StudentAddAgreement
func (m *StudentAddAgreement) TableName() string {
	return "student_add_agreement"
}

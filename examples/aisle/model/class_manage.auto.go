// Code generated by dol build. DO NOT EDIT.
// source: auto.go

package model

import (
	"encoding/json"
	"errors"
	"reflect"

	"github.com/2637309949/dolphin/packages/null"
	"github.com/2637309949/dolphin/packages/xormplus/xorm"
	"github.com/2637309949/dolphin/packages/xormplus/xorm/caches"
	"github.com/2637309949/dolphin/packages/xormplus/xorm/tags"
)

// ClassManage defined
type ClassManage struct {
	// CMId defined
	CMId null.Int `xorm:"int(11) pk notnull autoincr 'c_m_id'" json:"c_m_id" form:"c_m_id" xml:"c_m_id"`
	// ClassContainStu defined
	ClassContainStu null.Int `xorm:"int(11) 'class_contain_stu'" json:"class_contain_stu" form:"class_contain_stu" xml:"class_contain_stu"`
	// Creater defined
	Creater null.String `xorm:"varchar(36) 'creater'" json:"creater" form:"creater" xml:"creater"`
	// CreateDate defined
	CreateDate null.Time `xorm:"datetime 'create_date'" json:"create_date" form:"create_date" xml:"create_date"`
	// Updater defined
	Updater null.String `xorm:"varchar(36) 'updater'" json:"updater" form:"updater" xml:"updater"`
	// UpdateDate defined
	UpdateDate null.Time `xorm:"datetime 'update_date'" json:"update_date" form:"update_date" xml:"update_date"`
	// OsId defined
	OsId null.Int `xorm:"int(11) 'os_id'" json:"os_id" form:"os_id" xml:"os_id"`
	// ClassNumber defined
	ClassNumber null.String `xorm:"varchar(50) 'class_number'" json:"class_number" form:"class_number" xml:"class_number"`
	// Isdelete defined
	Isdelete null.Int `xorm:"int(11) 'isdelete'" json:"isdelete" form:"isdelete" xml:"isdelete"`
	// CmState defined
	CmState null.Int `xorm:"int(11) 'cm_state'" json:"cm_state" form:"cm_state" xml:"cm_state"`
	// KfId defined
	KfId null.Int `xorm:"int(11) 'kf_id'" json:"kf_id" form:"kf_id" xml:"kf_id"`
	// Isornokf defined
	Isornokf null.Int `xorm:"int(11) 'isornokf'" json:"isornokf" form:"isornokf" xml:"isornokf"`
	// BmType defined
	BmType null.Int `xorm:"int(11) 'bm_type'" json:"bm_type" form:"bm_type" xml:"bm_type"`
	// Remark defined
	Remark null.String `xorm:"varchar(2000) 'remark'" json:"remark" form:"remark" xml:"remark"`
	// BussType defined
	BussType null.Int `xorm:"int(11) 'buss_type'" json:"buss_type" form:"buss_type" xml:"buss_type"`
	// CpcId defined
	CpcId null.Int `xorm:"int(11) 'cpc_id'" json:"cpc_id" form:"cpc_id" xml:"cpc_id"`
	// NowStucount defined
	NowStucount null.Float `xorm:"float(50,2) 'now_stucount'" json:"now_stucount" form:"now_stucount" xml:"now_stucount"`
	// ClassType defined
	ClassType null.Int `xorm:"int(11) 'class_type'" json:"class_type" form:"class_type" xml:"class_type"`
	// ParId defined
	ParId null.Int `xorm:"int(11) 'par_id'" json:"par_id" form:"par_id" xml:"par_id"`
	// IfAutoPk defined
	IfAutoPk null.Int `xorm:"int(11) 'if_auto_pk'" json:"if_auto_pk" form:"if_auto_pk" xml:"if_auto_pk"`
	// PkClassroom defined
	PkClassroom null.Int `xorm:"int(11) 'pk_classroom'" json:"pk_classroom" form:"pk_classroom" xml:"pk_classroom"`
	// ClassName defined
	ClassName null.String `xorm:"varchar(500) 'class_name'" json:"class_name" form:"class_name" xml:"class_name"`
	// Ifholiday defined
	Ifholiday null.Int `xorm:"int(11) 'ifholiday'" json:"ifholiday" form:"ifholiday" xml:"ifholiday"`
	// Shuzi defined
	Shuzi null.Int `xorm:"int(11) 'shuzi'" json:"shuzi" form:"shuzi" xml:"shuzi"`
	// CmOpenDate defined
	CmOpenDate null.Time `xorm:"datetime 'cm_open_date'" json:"cm_open_date" form:"cm_open_date" xml:"cm_open_date"`
	// OpenUser defined
	OpenUser null.String `xorm:"varchar(30) 'open_user'" json:"open_user" form:"open_user" xml:"open_user"`
	// IfClassType defined
	IfClassType null.Int `xorm:"int(11) 'if_class_type'" json:"if_class_type" form:"if_class_type" xml:"if_class_type"`
	// CmGdkbType defined
	CmGdkbType null.Int `xorm:"int(11) 'cm_gdkb_type'" json:"cm_gdkb_type" form:"cm_gdkb_type" xml:"cm_gdkb_type"`
}

// With defined
func (m *ClassManage) With(s interface{}) (interface{}, error) {
	if reflect.ValueOf(s).Kind() != reflect.Ptr {
		return nil, errors.New("ptr required")
	}
	mbt, err := json.Marshal(m)
	if err != nil {
		return nil, err
	}
	if err := json.Unmarshal(mbt, s); err != nil {
		return nil, err
	}
	return s, err
}

// Marshal defined
func (m *ClassManage) Marshal() ([]byte, error) {
	return json.Marshal(m)
}

// Unmarshal defined
func (m *ClassManage) Unmarshal(data []byte) error {
	return json.Unmarshal(data, m)
}

// ToMap defined
func (m *ClassManage) ToMap() (map[string]interface{}, error) {
	byt, err := m.Marshal()
	if err != nil {
		return nil, err
	}
	itf := map[string]interface{}{}
	err = json.Unmarshal(byt, &itf)
	return itf, err
}

// FromMap defined
func (m *ClassManage) FromMap(fm map[string]interface{}) error {
	byt, err := json.Marshal(fm)
	if err != nil {
		return err
	}
	err = m.Unmarshal(byt)
	return err
}

// Parser defined
func (m *ClassManage) Parser(db *xorm.Engine) *tags.Parser {
	dialect, mapper, cache := db.Dialect(), db.DB().Mapper, caches.NewManager()
	return tags.NewParser("xorm", dialect, mapper, mapper, cache)
}

// PrimaryKeys defined
func (m *ClassManage) PrimaryKeys(db *xorm.Engine) ([]string, error) {
	v := reflect.Indirect(reflect.ValueOf(m))
	table, err := m.Parser(db).Parse(v)
	return table.PrimaryKeys, err
}

// TableName table name of defined ClassManage
func (m *ClassManage) TableName() string {
	return "class_manage"
}

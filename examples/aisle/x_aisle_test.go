// Code generated by dol build. Only Generate by tools if not existed.
// source: x_aisle_test.go

package main

import (
	"github.com/2637309949/dolphin/packages/xtest"

	// "github.com/mattn/go-sqlite3"
	_ "github.com/mattn/go-sqlite3"
)

// XTestSysUserLogin defined TODO
var XTestSysUserLogin, XTestSysUserLoginRequest = func(ctx *xtest.Context) {
	ret := struct {
		Code int `json:"code"`
		Data struct {
			AccessToken  string `json:"access_token"`
			RefreshToken string `json:"refresh_token"`
		} `json:"data"`
	}{}
	err := ctx.Bind(&ret)
	if err != nil {
		ctx.Error(err)
	}
	x.SetToken(ret.Data.AccessToken)
}, map[string]interface{}{"domain": "localhost", "name": "admin", "password": "admin"}

// XTestBaseOrganAdd, XTestBaseOrganAddRequest defined TODO
var XTestBaseOrganAdd, XTestBaseOrganAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestBaseOrganAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestBaseOrganAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestBaseOrganBatchAdd, XTestBaseOrganBatchAddRequest defined TODO
var XTestBaseOrganBatchAdd, XTestBaseOrganBatchAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestBaseOrganBatchAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestBaseOrganBatchAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestBaseOrganDel, XTestBaseOrganDelRequest defined TODO
var XTestBaseOrganDel, XTestBaseOrganDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestBaseOrganDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestBaseOrganDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestBaseOrganBatchDel, XTestBaseOrganBatchDelRequest defined TODO
var XTestBaseOrganBatchDel, XTestBaseOrganBatchDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestBaseOrganBatchDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestBaseOrganBatchDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestBaseOrganUpdate, XTestBaseOrganUpdateRequest defined TODO
var XTestBaseOrganUpdate, XTestBaseOrganUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestBaseOrganUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestBaseOrganUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestBaseOrganBatchUpdate, XTestBaseOrganBatchUpdateRequest defined TODO
var XTestBaseOrganBatchUpdate, XTestBaseOrganBatchUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestBaseOrganBatchUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestBaseOrganBatchUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestBaseOrganPage, XTestBaseOrganPageRequest defined TODO
var XTestBaseOrganPage, XTestBaseOrganPageRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestBaseOrganPage = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestBaseOrganPage = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestBaseOrganGet, XTestBaseOrganGetRequest defined TODO
var XTestBaseOrganGet, XTestBaseOrganGetRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestBaseOrganGet = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestBaseOrganGet = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// Code generated by dol build. Only Generate by tools if not existed, your can rewrite platform.App default action
// source: api.go

package api

import (
	"fmt"

	"aisle/svc"

	"github.com/2637309949/dolphin/packages/web/core"
	"github.com/2637309949/dolphin/platform/api"
	"github.com/2637309949/dolphin/platform/util/errors"
)

// vars defined
var (
	App *Dolphin
	Run func()
)

type (
	// Dolphin defined parse app engine
	Dolphin struct {
		*api.Dolphin
	}
	// Context defined http handle hook context
	Context struct {
		core.Context
	}
)

// Reflesh defined TODO
func (dol *Dolphin) Reflesh() error {
	dol.SyncModel()
	dol.SyncSrv(svc.NewServiceContext(api.CacheStore))
	dol.SyncController()
	return nil
}

// Run defined TODO
func (dol *Dolphin) Run() {
	if err := dol.Reflesh(); err != nil {
		panic(fmt.Errorf("%v\n%v", err, string(errors.Wrap(err, 2).Stack())))
	}
	if err := dol.Dolphin.Run(); err != nil {
		panic(fmt.Errorf("%v\n%v", err, string(errors.Wrap(err, 2).Stack())))
	}
}

// New defined init dol you can custom engine
func New() *Dolphin {
	dol := Dolphin{Dolphin: api.App}
	return &dol
}

func init() {
	app := New()
	App, Run = app, app.Run
}

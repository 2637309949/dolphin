// Code generated by dol build. Only Generate by tools if not existed.
// source: app.go

package app

import (
	"context"
	"path"

	"github.com/json-iterator/go/extra"
	"github.com/spf13/viper"

	// github.com/2637309949/dolphin/platform/conf
	_ "github.com/2637309949/dolphin/platform/conf"
)

// OnStart defined OnStart
func OnStart(engine *Engine) func(context.Context) error {
	return func(ctx context.Context) error {
		engine.Http.OnStart(ctx)
		engine.RPC.OnStart(ctx)
		return nil
	}
}

// OnStop defined OnStop
func OnStop(engine *Engine) func(ctx context.Context) error {
	return func(ctx context.Context) error {
		engine.Http.OnStop(ctx)
		engine.RPC.OnStop(ctx)
		return nil
	}
}

// NewLifeHook create lifecycle hook
func NewLifeHook(e *Engine) Hook {
	return Hook{OnStart(e), OnStop(e)}
}

// init after NewEngine
func init() {
	extra.RegisterFuzzyDecoders()
	AuthServerURL = viper.GetString("oauth.server")
	OA2Cfg.ClientID = viper.GetString("oauth.id")
	OA2Cfg.ClientSecret = viper.GetString("oauth.secret")
	OA2Cfg.RedirectURL = viper.GetString("oauth.cli") + path.Join(viper.GetString("http.prefix"), SysCasInstance.Oauth2.RelativePath)
	OA2Cfg.Endpoint.AuthURL = AuthServerURL + path.Join(viper.GetString("http.prefix"), SysCasInstance.Authorize.RelativePath)
	OA2Cfg.Endpoint.TokenURL = AuthServerURL + path.Join(viper.GetString("http.prefix"), SysCasInstance.Token.RelativePath)
	SyncModel()
	SyncController()
	SyncService()
}

// Code generated by dol build. DO NOT EDIT.
const axios = require('../request').default

// pprof 
module.exports.pprof = (data = {}, opt = {}) => {
  let url = Object.assign({ url: '/debug/pprof/?' }, opt).url
  url = Object.keys(data).reduce((acc, curr) => `${acc}${key}=${encodeURIComponent(data[key])}&` ,url)
  return axios({
    url: url,
    method: 'get',
    ...opt
  })
}

// heap 
module.exports.heap = (data = {}, opt = {}) => {
  let url = Object.assign({ url: '/debug/pprof/heap?' }, opt).url
  url = Object.keys(data).reduce((acc, curr) => `${acc}${key}=${encodeURIComponent(data[key])}&` ,url)
  return axios({
    url: url,
    method: 'get',
    ...opt
  })
}

// goroutine 
module.exports.goroutine = (data = {}, opt = {}) => {
  let url = Object.assign({ url: '/debug/pprof/goroutine?' }, opt).url
  url = Object.keys(data).reduce((acc, curr) => `${acc}${key}=${encodeURIComponent(data[key])}&` ,url)
  return axios({
    url: url,
    method: 'get',
    ...opt
  })
}

// allocs 
module.exports.allocs = (data = {}, opt = {}) => {
  let url = Object.assign({ url: '/debug/pprof/allocs?' }, opt).url
  url = Object.keys(data).reduce((acc, curr) => `${acc}${key}=${encodeURIComponent(data[key])}&` ,url)
  return axios({
    url: url,
    method: 'get',
    ...opt
  })
}

// block 
module.exports.block = (data = {}, opt = {}) => {
  let url = Object.assign({ url: '/debug/pprof/block?' }, opt).url
  url = Object.keys(data).reduce((acc, curr) => `${acc}${key}=${encodeURIComponent(data[key])}&` ,url)
  return axios({
    url: url,
    method: 'get',
    ...opt
  })
}

// threadcreate 
module.exports.threadcreate = (data = {}, opt = {}) => {
  let url = Object.assign({ url: '/debug/pprof/threadcreate?' }, opt).url
  url = Object.keys(data).reduce((acc, curr) => `${acc}${key}=${encodeURIComponent(data[key])}&` ,url)
  return axios({
    url: url,
    method: 'get',
    ...opt
  })
}

// cmdline 
module.exports.cmdline = (data = {}, opt = {}) => {
  let url = Object.assign({ url: '/debug/pprof/cmdline?' }, opt).url
  url = Object.keys(data).reduce((acc, curr) => `${acc}${key}=${encodeURIComponent(data[key])}&` ,url)
  return axios({
    url: url,
    method: 'get',
    ...opt
  })
}

// profile 
module.exports.profile = (data = {}, opt = {}) => {
  let url = Object.assign({ url: '/debug/pprof/profile?' }, opt).url
  url = Object.keys(data).reduce((acc, curr) => `${acc}${key}=${encodeURIComponent(data[key])}&` ,url)
  return axios({
    url: url,
    method: 'get',
    ...opt
  })
}

// symbol 
module.exports.symbol = (data = {}, opt = {}) => {
  let url = Object.assign({ url: '/debug/pprof/symbol' }, opt).url
  if ((opt.method || 'get,post') === 'get') {
    url = Object.keys(data).reduce((acc, curr) => `${acc}${key}=${encodeURIComponent(data[key])}&` ,url)
    return axios({
      url: url,
      method: 'get',
      ...opt
    })
  }
  return axios({
    url: url,
    method: 'get,post',
    data,
    ...opt
  })
}

// trace 
module.exports.trace = (data = {}, opt = {}) => {
  let url = Object.assign({ url: '/debug/pprof/trace?' }, opt).url
  url = Object.keys(data).reduce((acc, curr) => `${acc}${key}=${encodeURIComponent(data[key])}&` ,url)
  return axios({
    url: url,
    method: 'get',
    ...opt
  })
}

// mutex 
module.exports.mutex = (data = {}, opt = {}) => {
  let url = Object.assign({ url: '/debug/pprof/mutex?' }, opt).url
  url = Object.keys(data).reduce((acc, curr) => `${acc}${key}=${encodeURIComponent(data[key])}&` ,url)
  return axios({
    url: url,
    method: 'get',
    ...opt
  })
}


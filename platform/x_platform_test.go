// Code generated by dol build. Only Generate by tools if not existed.
// source: x_platform_test.go

package main

import (
	"github.com/2637309949/dolphin/packages/xtest"

	// "github.com/mattn/go-sqlite3"
	_ "github.com/mattn/go-sqlite3"
)

// XTestSysUserLogin defined TODO
var XTestSysUserLogin, XTestSysUserLoginRequest = func(ctx *xtest.Context) {
	ret := struct {
		Code int `json:"code"`
		Data struct {
			AccessToken  string `json:"access_token"`
			RefreshToken string `json:"refresh_token"`
		} `json:"data"`
	}{}
	err := ctx.Bind(&ret)
	if err != nil {
		ctx.Error(err)
	}
	x.SetToken(ret.Data.AccessToken)
}, map[string]interface{}{"domain": "localhost", "name": "admin", "password": "admin"}

// XTestSysAppFunAdd, XTestSysAppFunAddRequest defined TODO
var XTestSysAppFunAdd, XTestSysAppFunAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysAppFunAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysAppFunAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysAppFunBatchAdd, XTestSysAppFunBatchAddRequest defined TODO
var XTestSysAppFunBatchAdd, XTestSysAppFunBatchAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysAppFunBatchAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysAppFunBatchAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysAppFunDel, XTestSysAppFunDelRequest defined TODO
var XTestSysAppFunDel, XTestSysAppFunDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysAppFunDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysAppFunDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysAppFunBatchDel, XTestSysAppFunBatchDelRequest defined TODO
var XTestSysAppFunBatchDel, XTestSysAppFunBatchDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysAppFunBatchDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysAppFunBatchDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysAppFunUpdate, XTestSysAppFunUpdateRequest defined TODO
var XTestSysAppFunUpdate, XTestSysAppFunUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysAppFunUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysAppFunUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysAppFunBatchUpdate, XTestSysAppFunBatchUpdateRequest defined TODO
var XTestSysAppFunBatchUpdate, XTestSysAppFunBatchUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysAppFunBatchUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysAppFunBatchUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysAppFunPage, XTestSysAppFunPageRequest defined TODO
var XTestSysAppFunPage, XTestSysAppFunPageRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysAppFunPage = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysAppFunPage = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysAppFunTree, XTestSysAppFunTreeRequest defined TODO
var XTestSysAppFunTree, XTestSysAppFunTreeRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysAppFunTree = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysAppFunTree = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysAppFunGet, XTestSysAppFunGetRequest defined TODO
var XTestSysAppFunGet, XTestSysAppFunGetRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysAppFunGet = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysAppFunGet = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysAreaAdd, XTestSysAreaAddRequest defined TODO
var XTestSysAreaAdd, XTestSysAreaAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysAreaAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysAreaAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysAreaBatchAdd, XTestSysAreaBatchAddRequest defined TODO
var XTestSysAreaBatchAdd, XTestSysAreaBatchAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysAreaBatchAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysAreaBatchAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysAreaDel, XTestSysAreaDelRequest defined TODO
var XTestSysAreaDel, XTestSysAreaDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysAreaDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysAreaDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysAreaBatchDel, XTestSysAreaBatchDelRequest defined TODO
var XTestSysAreaBatchDel, XTestSysAreaBatchDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysAreaBatchDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysAreaBatchDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysAreaUpdate, XTestSysAreaUpdateRequest defined TODO
var XTestSysAreaUpdate, XTestSysAreaUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysAreaUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysAreaUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysAreaBatchUpdate, XTestSysAreaBatchUpdateRequest defined TODO
var XTestSysAreaBatchUpdate, XTestSysAreaBatchUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysAreaBatchUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysAreaBatchUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysAreaPage, XTestSysAreaPageRequest defined TODO
var XTestSysAreaPage, XTestSysAreaPageRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysAreaPage = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysAreaPage = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysAreaGet, XTestSysAreaGetRequest defined TODO
var XTestSysAreaGet, XTestSysAreaGetRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysAreaGet = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysAreaGet = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysAttachmentAdd, XTestSysAttachmentAddRequest defined TODO
var XTestSysAttachmentAdd, XTestSysAttachmentAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysAttachmentAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysAttachmentAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysAttachmentBatchAdd, XTestSysAttachmentBatchAddRequest defined TODO
var XTestSysAttachmentBatchAdd, XTestSysAttachmentBatchAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysAttachmentBatchAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysAttachmentBatchAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysAttachmentUpload, XTestSysAttachmentUploadRequest defined TODO
var XTestSysAttachmentUpload, XTestSysAttachmentUploadRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysAttachmentUpload = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysAttachmentUpload = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysAttachmentExport, XTestSysAttachmentExportRequest defined TODO
var XTestSysAttachmentExport, XTestSysAttachmentExportRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysAttachmentExport = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysAttachmentExport = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysAttachmentDel, XTestSysAttachmentDelRequest defined TODO
var XTestSysAttachmentDel, XTestSysAttachmentDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysAttachmentDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysAttachmentDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysAttachmentBatchDel, XTestSysAttachmentBatchDelRequest defined TODO
var XTestSysAttachmentBatchDel, XTestSysAttachmentBatchDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysAttachmentBatchDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysAttachmentBatchDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysAttachmentUpdate, XTestSysAttachmentUpdateRequest defined TODO
var XTestSysAttachmentUpdate, XTestSysAttachmentUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysAttachmentUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysAttachmentUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysAttachmentBatchUpdate, XTestSysAttachmentBatchUpdateRequest defined TODO
var XTestSysAttachmentBatchUpdate, XTestSysAttachmentBatchUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysAttachmentBatchUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysAttachmentBatchUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysAttachmentPage, XTestSysAttachmentPageRequest defined TODO
var XTestSysAttachmentPage, XTestSysAttachmentPageRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysAttachmentPage = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysAttachmentPage = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysAttachmentGet, XTestSysAttachmentGetRequest defined TODO
var XTestSysAttachmentGet, XTestSysAttachmentGetRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysAttachmentGet = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysAttachmentGet = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysCasLogout, XTestSysCasLogoutRequest defined TODO
var XTestSysCasLogout, XTestSysCasLogoutRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysCasLogout = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysCasLogout = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysCasAffirm, XTestSysCasAffirmRequest defined TODO
var XTestSysCasAffirm, XTestSysCasAffirmRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysCasAffirm = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysCasAffirm = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysCasAuthorize, XTestSysCasAuthorizeRequest defined TODO
var XTestSysCasAuthorize, XTestSysCasAuthorizeRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysCasAuthorize = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysCasAuthorize = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysCasToken, XTestSysCasTokenRequest defined TODO
var XTestSysCasToken, XTestSysCasTokenRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysCasToken = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysCasToken = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysCasURL, XTestSysCasURLRequest defined TODO
var XTestSysCasURL, XTestSysCasURLRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysCasURL = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysCasURL = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysCasOauth2, XTestSysCasOauth2Request defined TODO
var XTestSysCasOauth2, XTestSysCasOauth2Request = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysCasOauth2 = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysCasOauth2 = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysCasQrOauth2, XTestSysCasQrOauth2Request defined TODO
var XTestSysCasQrOauth2, XTestSysCasQrOauth2Request = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysCasQrOauth2 = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysCasQrOauth2 = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysCasRefresh, XTestSysCasRefreshRequest defined TODO
var XTestSysCasRefresh, XTestSysCasRefreshRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysCasRefresh = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysCasRefresh = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysCasCheck, XTestSysCasCheckRequest defined TODO
var XTestSysCasCheck, XTestSysCasCheckRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysCasCheck = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysCasCheck = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysCasProfile, XTestSysCasProfileRequest defined TODO
var XTestSysCasProfile, XTestSysCasProfileRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysCasProfile = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysCasProfile = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysCasQrcode, XTestSysCasQrcodeRequest defined TODO
var XTestSysCasQrcode, XTestSysCasQrcodeRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysCasQrcode = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysCasQrcode = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysCasQrconnect, XTestSysCasQrconnectRequest defined TODO
var XTestSysCasQrconnect, XTestSysCasQrconnectRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysCasQrconnect = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysCasQrconnect = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysCasQrcodeLogin, XTestSysCasQrcodeLoginRequest defined TODO
var XTestSysCasQrcodeLogin, XTestSysCasQrcodeLoginRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysCasQrcodeLogin = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysCasQrcodeLogin = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysClientAdd, XTestSysClientAddRequest defined TODO
var XTestSysClientAdd, XTestSysClientAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysClientAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysClientAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysClientBatchAdd, XTestSysClientBatchAddRequest defined TODO
var XTestSysClientBatchAdd, XTestSysClientBatchAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysClientBatchAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysClientBatchAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysClientDel, XTestSysClientDelRequest defined TODO
var XTestSysClientDel, XTestSysClientDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysClientDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysClientDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysClientBatchDel, XTestSysClientBatchDelRequest defined TODO
var XTestSysClientBatchDel, XTestSysClientBatchDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysClientBatchDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysClientBatchDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysClientUpdate, XTestSysClientUpdateRequest defined TODO
var XTestSysClientUpdate, XTestSysClientUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysClientUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysClientUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysClientBatchUpdate, XTestSysClientBatchUpdateRequest defined TODO
var XTestSysClientBatchUpdate, XTestSysClientBatchUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysClientBatchUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysClientBatchUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysClientPage, XTestSysClientPageRequest defined TODO
var XTestSysClientPage, XTestSysClientPageRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysClientPage = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysClientPage = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysClientGet, XTestSysClientGetRequest defined TODO
var XTestSysClientGet, XTestSysClientGetRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysClientGet = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysClientGet = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysCommentAdd, XTestSysCommentAddRequest defined TODO
var XTestSysCommentAdd, XTestSysCommentAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysCommentAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysCommentAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysCommentBatchAdd, XTestSysCommentBatchAddRequest defined TODO
var XTestSysCommentBatchAdd, XTestSysCommentBatchAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysCommentBatchAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysCommentBatchAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysCommentDel, XTestSysCommentDelRequest defined TODO
var XTestSysCommentDel, XTestSysCommentDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysCommentDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysCommentDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysCommentBatchDel, XTestSysCommentBatchDelRequest defined TODO
var XTestSysCommentBatchDel, XTestSysCommentBatchDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysCommentBatchDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysCommentBatchDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysCommentUpdate, XTestSysCommentUpdateRequest defined TODO
var XTestSysCommentUpdate, XTestSysCommentUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysCommentUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysCommentUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysCommentBatchUpdate, XTestSysCommentBatchUpdateRequest defined TODO
var XTestSysCommentBatchUpdate, XTestSysCommentBatchUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysCommentBatchUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysCommentBatchUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysCommentPage, XTestSysCommentPageRequest defined TODO
var XTestSysCommentPage, XTestSysCommentPageRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysCommentPage = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysCommentPage = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysCommentGet, XTestSysCommentGetRequest defined TODO
var XTestSysCommentGet, XTestSysCommentGetRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysCommentGet = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysCommentGet = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysDataPermissionAdd, XTestSysDataPermissionAddRequest defined TODO
var XTestSysDataPermissionAdd, XTestSysDataPermissionAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysDataPermissionAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysDataPermissionAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysDataPermissionBatchAdd, XTestSysDataPermissionBatchAddRequest defined TODO
var XTestSysDataPermissionBatchAdd, XTestSysDataPermissionBatchAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysDataPermissionBatchAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysDataPermissionBatchAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysDataPermissionDel, XTestSysDataPermissionDelRequest defined TODO
var XTestSysDataPermissionDel, XTestSysDataPermissionDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysDataPermissionDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysDataPermissionDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysDataPermissionBatchDel, XTestSysDataPermissionBatchDelRequest defined TODO
var XTestSysDataPermissionBatchDel, XTestSysDataPermissionBatchDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysDataPermissionBatchDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysDataPermissionBatchDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysDataPermissionUpdate, XTestSysDataPermissionUpdateRequest defined TODO
var XTestSysDataPermissionUpdate, XTestSysDataPermissionUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysDataPermissionUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysDataPermissionUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysDataPermissionBatchUpdate, XTestSysDataPermissionBatchUpdateRequest defined TODO
var XTestSysDataPermissionBatchUpdate, XTestSysDataPermissionBatchUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysDataPermissionBatchUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysDataPermissionBatchUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysDataPermissionPage, XTestSysDataPermissionPageRequest defined TODO
var XTestSysDataPermissionPage, XTestSysDataPermissionPageRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysDataPermissionPage = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysDataPermissionPage = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysDataPermissionGet, XTestSysDataPermissionGetRequest defined TODO
var XTestSysDataPermissionGet, XTestSysDataPermissionGetRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysDataPermissionGet = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysDataPermissionGet = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestDebugPprof, XTestDebugPprofRequest defined TODO
var XTestDebugPprof, XTestDebugPprofRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestDebugPprof = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestDebugPprof = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestDebugHeap, XTestDebugHeapRequest defined TODO
var XTestDebugHeap, XTestDebugHeapRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestDebugHeap = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestDebugHeap = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestDebugGoroutine, XTestDebugGoroutineRequest defined TODO
var XTestDebugGoroutine, XTestDebugGoroutineRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestDebugGoroutine = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestDebugGoroutine = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestDebugAllocs, XTestDebugAllocsRequest defined TODO
var XTestDebugAllocs, XTestDebugAllocsRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestDebugAllocs = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestDebugAllocs = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestDebugBlock, XTestDebugBlockRequest defined TODO
var XTestDebugBlock, XTestDebugBlockRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestDebugBlock = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestDebugBlock = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestDebugThreadcreate, XTestDebugThreadcreateRequest defined TODO
var XTestDebugThreadcreate, XTestDebugThreadcreateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestDebugThreadcreate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestDebugThreadcreate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestDebugCmdline, XTestDebugCmdlineRequest defined TODO
var XTestDebugCmdline, XTestDebugCmdlineRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestDebugCmdline = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestDebugCmdline = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestDebugProfile, XTestDebugProfileRequest defined TODO
var XTestDebugProfile, XTestDebugProfileRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestDebugProfile = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestDebugProfile = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestDebugSymbol, XTestDebugSymbolRequest defined TODO
var XTestDebugSymbol, XTestDebugSymbolRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestDebugSymbol = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestDebugSymbol = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestDebugTrace, XTestDebugTraceRequest defined TODO
var XTestDebugTrace, XTestDebugTraceRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestDebugTrace = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestDebugTrace = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestDebugMutex, XTestDebugMutexRequest defined TODO
var XTestDebugMutex, XTestDebugMutexRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestDebugMutex = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestDebugMutex = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysDingtalkOauth2, XTestSysDingtalkOauth2Request defined TODO
var XTestSysDingtalkOauth2, XTestSysDingtalkOauth2Request = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysDingtalkOauth2 = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysDingtalkOauth2 = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysDomainAdd, XTestSysDomainAddRequest defined TODO
var XTestSysDomainAdd, XTestSysDomainAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysDomainAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysDomainAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysDomainBatchAdd, XTestSysDomainBatchAddRequest defined TODO
var XTestSysDomainBatchAdd, XTestSysDomainBatchAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysDomainBatchAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysDomainBatchAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysDomainDel, XTestSysDomainDelRequest defined TODO
var XTestSysDomainDel, XTestSysDomainDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysDomainDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysDomainDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysDomainBatchDel, XTestSysDomainBatchDelRequest defined TODO
var XTestSysDomainBatchDel, XTestSysDomainBatchDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysDomainBatchDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysDomainBatchDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysDomainUpdate, XTestSysDomainUpdateRequest defined TODO
var XTestSysDomainUpdate, XTestSysDomainUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysDomainUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysDomainUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysDomainBatchUpdate, XTestSysDomainBatchUpdateRequest defined TODO
var XTestSysDomainBatchUpdate, XTestSysDomainBatchUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysDomainBatchUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysDomainBatchUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysDomainPage, XTestSysDomainPageRequest defined TODO
var XTestSysDomainPage, XTestSysDomainPageRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysDomainPage = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysDomainPage = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysDomainGet, XTestSysDomainGetRequest defined TODO
var XTestSysDomainGet, XTestSysDomainGetRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysDomainGet = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysDomainGet = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysMenuAdd, XTestSysMenuAddRequest defined TODO
var XTestSysMenuAdd, XTestSysMenuAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysMenuAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysMenuAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysMenuBatchAdd, XTestSysMenuBatchAddRequest defined TODO
var XTestSysMenuBatchAdd, XTestSysMenuBatchAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysMenuBatchAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysMenuBatchAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysMenuDel, XTestSysMenuDelRequest defined TODO
var XTestSysMenuDel, XTestSysMenuDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysMenuDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysMenuDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysMenuBatchDel, XTestSysMenuBatchDelRequest defined TODO
var XTestSysMenuBatchDel, XTestSysMenuBatchDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysMenuBatchDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysMenuBatchDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysMenuUpdate, XTestSysMenuUpdateRequest defined TODO
var XTestSysMenuUpdate, XTestSysMenuUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysMenuUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysMenuUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysMenuBatchUpdate, XTestSysMenuBatchUpdateRequest defined TODO
var XTestSysMenuBatchUpdate, XTestSysMenuBatchUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysMenuBatchUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysMenuBatchUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysMenuSidebar, XTestSysMenuSidebarRequest defined TODO
var XTestSysMenuSidebar, XTestSysMenuSidebarRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysMenuSidebar = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysMenuSidebar = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysMenuPage, XTestSysMenuPageRequest defined TODO
var XTestSysMenuPage, XTestSysMenuPageRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysMenuPage = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysMenuPage = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysMenuTree, XTestSysMenuTreeRequest defined TODO
var XTestSysMenuTree, XTestSysMenuTreeRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysMenuTree = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysMenuTree = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysMenuGet, XTestSysMenuGetRequest defined TODO
var XTestSysMenuGet, XTestSysMenuGetRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysMenuGet = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysMenuGet = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysNotificationAdd, XTestSysNotificationAddRequest defined TODO
var XTestSysNotificationAdd, XTestSysNotificationAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysNotificationAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysNotificationAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysNotificationBatchAdd, XTestSysNotificationBatchAddRequest defined TODO
var XTestSysNotificationBatchAdd, XTestSysNotificationBatchAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysNotificationBatchAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysNotificationBatchAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysNotificationDel, XTestSysNotificationDelRequest defined TODO
var XTestSysNotificationDel, XTestSysNotificationDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysNotificationDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysNotificationDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysNotificationBatchDel, XTestSysNotificationBatchDelRequest defined TODO
var XTestSysNotificationBatchDel, XTestSysNotificationBatchDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysNotificationBatchDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysNotificationBatchDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysNotificationUpdate, XTestSysNotificationUpdateRequest defined TODO
var XTestSysNotificationUpdate, XTestSysNotificationUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysNotificationUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysNotificationUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysNotificationBatchUpdate, XTestSysNotificationBatchUpdateRequest defined TODO
var XTestSysNotificationBatchUpdate, XTestSysNotificationBatchUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysNotificationBatchUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysNotificationBatchUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysNotificationPage, XTestSysNotificationPageRequest defined TODO
var XTestSysNotificationPage, XTestSysNotificationPageRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysNotificationPage = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysNotificationPage = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysNotificationGet, XTestSysNotificationGetRequest defined TODO
var XTestSysNotificationGet, XTestSysNotificationGetRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysNotificationGet = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysNotificationGet = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysOptionsetAdd, XTestSysOptionsetAddRequest defined TODO
var XTestSysOptionsetAdd, XTestSysOptionsetAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysOptionsetAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysOptionsetAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysOptionsetBatchAdd, XTestSysOptionsetBatchAddRequest defined TODO
var XTestSysOptionsetBatchAdd, XTestSysOptionsetBatchAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysOptionsetBatchAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysOptionsetBatchAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysOptionsetDel, XTestSysOptionsetDelRequest defined TODO
var XTestSysOptionsetDel, XTestSysOptionsetDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysOptionsetDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysOptionsetDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysOptionsetBatchDel, XTestSysOptionsetBatchDelRequest defined TODO
var XTestSysOptionsetBatchDel, XTestSysOptionsetBatchDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysOptionsetBatchDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysOptionsetBatchDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysOptionsetUpdate, XTestSysOptionsetUpdateRequest defined TODO
var XTestSysOptionsetUpdate, XTestSysOptionsetUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysOptionsetUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysOptionsetUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysOptionsetBatchUpdate, XTestSysOptionsetBatchUpdateRequest defined TODO
var XTestSysOptionsetBatchUpdate, XTestSysOptionsetBatchUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysOptionsetBatchUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysOptionsetBatchUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysOptionsetPage, XTestSysOptionsetPageRequest defined TODO
var XTestSysOptionsetPage, XTestSysOptionsetPageRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysOptionsetPage = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysOptionsetPage = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysOptionsetGet, XTestSysOptionsetGetRequest defined TODO
var XTestSysOptionsetGet, XTestSysOptionsetGetRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysOptionsetGet = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysOptionsetGet = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysOrgAdd, XTestSysOrgAddRequest defined TODO
var XTestSysOrgAdd, XTestSysOrgAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysOrgAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysOrgAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysOrgBatchAdd, XTestSysOrgBatchAddRequest defined TODO
var XTestSysOrgBatchAdd, XTestSysOrgBatchAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysOrgBatchAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysOrgBatchAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysOrgDel, XTestSysOrgDelRequest defined TODO
var XTestSysOrgDel, XTestSysOrgDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysOrgDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysOrgDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysOrgBatchDel, XTestSysOrgBatchDelRequest defined TODO
var XTestSysOrgBatchDel, XTestSysOrgBatchDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysOrgBatchDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysOrgBatchDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysOrgUpdate, XTestSysOrgUpdateRequest defined TODO
var XTestSysOrgUpdate, XTestSysOrgUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysOrgUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysOrgUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysOrgBatchUpdate, XTestSysOrgBatchUpdateRequest defined TODO
var XTestSysOrgBatchUpdate, XTestSysOrgBatchUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysOrgBatchUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysOrgBatchUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysOrgPage, XTestSysOrgPageRequest defined TODO
var XTestSysOrgPage, XTestSysOrgPageRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysOrgPage = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysOrgPage = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysOrgTree, XTestSysOrgTreeRequest defined TODO
var XTestSysOrgTree, XTestSysOrgTreeRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysOrgTree = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysOrgTree = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysOrgGet, XTestSysOrgGetRequest defined TODO
var XTestSysOrgGet, XTestSysOrgGetRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysOrgGet = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysOrgGet = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysPermissionAdd, XTestSysPermissionAddRequest defined TODO
var XTestSysPermissionAdd, XTestSysPermissionAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysPermissionAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysPermissionAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysPermissionBatchAdd, XTestSysPermissionBatchAddRequest defined TODO
var XTestSysPermissionBatchAdd, XTestSysPermissionBatchAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysPermissionBatchAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysPermissionBatchAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysPermissionDel, XTestSysPermissionDelRequest defined TODO
var XTestSysPermissionDel, XTestSysPermissionDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysPermissionDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysPermissionDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysPermissionBatchDel, XTestSysPermissionBatchDelRequest defined TODO
var XTestSysPermissionBatchDel, XTestSysPermissionBatchDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysPermissionBatchDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysPermissionBatchDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysPermissionUpdate, XTestSysPermissionUpdateRequest defined TODO
var XTestSysPermissionUpdate, XTestSysPermissionUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysPermissionUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysPermissionUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysPermissionBatchUpdate, XTestSysPermissionBatchUpdateRequest defined TODO
var XTestSysPermissionBatchUpdate, XTestSysPermissionBatchUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysPermissionBatchUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysPermissionBatchUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysPermissionPage, XTestSysPermissionPageRequest defined TODO
var XTestSysPermissionPage, XTestSysPermissionPageRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysPermissionPage = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysPermissionPage = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysPermissionGet, XTestSysPermissionGetRequest defined TODO
var XTestSysPermissionGet, XTestSysPermissionGetRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysPermissionGet = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysPermissionGet = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysRoleAdd, XTestSysRoleAddRequest defined TODO
var XTestSysRoleAdd, XTestSysRoleAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysRoleAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysRoleAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysRoleBatchAdd, XTestSysRoleBatchAddRequest defined TODO
var XTestSysRoleBatchAdd, XTestSysRoleBatchAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysRoleBatchAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysRoleBatchAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysRoleDel, XTestSysRoleDelRequest defined TODO
var XTestSysRoleDel, XTestSysRoleDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysRoleDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysRoleDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysRoleBatchDel, XTestSysRoleBatchDelRequest defined TODO
var XTestSysRoleBatchDel, XTestSysRoleBatchDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysRoleBatchDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysRoleBatchDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysRoleUpdate, XTestSysRoleUpdateRequest defined TODO
var XTestSysRoleUpdate, XTestSysRoleUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysRoleUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysRoleUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysRoleBatchUpdate, XTestSysRoleBatchUpdateRequest defined TODO
var XTestSysRoleBatchUpdate, XTestSysRoleBatchUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysRoleBatchUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysRoleBatchUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysRolePage, XTestSysRolePageRequest defined TODO
var XTestSysRolePage, XTestSysRolePageRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysRolePage = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysRolePage = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysRoleRoleMenuTree, XTestSysRoleRoleMenuTreeRequest defined TODO
var XTestSysRoleRoleMenuTree, XTestSysRoleRoleMenuTreeRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysRoleRoleMenuTree = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysRoleRoleMenuTree = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysRoleRoleAppFunTree, XTestSysRoleRoleAppFunTreeRequest defined TODO
var XTestSysRoleRoleAppFunTree, XTestSysRoleRoleAppFunTreeRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysRoleRoleAppFunTree = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysRoleRoleAppFunTree = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysRoleGet, XTestSysRoleGetRequest defined TODO
var XTestSysRoleGet, XTestSysRoleGetRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysRoleGet = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysRoleGet = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysRoleMenuAdd, XTestSysRoleMenuAddRequest defined TODO
var XTestSysRoleMenuAdd, XTestSysRoleMenuAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysRoleMenuAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysRoleMenuAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysRoleMenuBatchAdd, XTestSysRoleMenuBatchAddRequest defined TODO
var XTestSysRoleMenuBatchAdd, XTestSysRoleMenuBatchAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysRoleMenuBatchAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysRoleMenuBatchAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysRoleMenuDel, XTestSysRoleMenuDelRequest defined TODO
var XTestSysRoleMenuDel, XTestSysRoleMenuDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysRoleMenuDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysRoleMenuDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysRoleMenuBatchDel, XTestSysRoleMenuBatchDelRequest defined TODO
var XTestSysRoleMenuBatchDel, XTestSysRoleMenuBatchDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysRoleMenuBatchDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysRoleMenuBatchDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysRoleMenuUpdate, XTestSysRoleMenuUpdateRequest defined TODO
var XTestSysRoleMenuUpdate, XTestSysRoleMenuUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysRoleMenuUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysRoleMenuUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysRoleMenuBatchUpdate, XTestSysRoleMenuBatchUpdateRequest defined TODO
var XTestSysRoleMenuBatchUpdate, XTestSysRoleMenuBatchUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysRoleMenuBatchUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysRoleMenuBatchUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysRoleMenuPage, XTestSysRoleMenuPageRequest defined TODO
var XTestSysRoleMenuPage, XTestSysRoleMenuPageRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysRoleMenuPage = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysRoleMenuPage = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysRoleMenuGet, XTestSysRoleMenuGetRequest defined TODO
var XTestSysRoleMenuGet, XTestSysRoleMenuGetRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysRoleMenuGet = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysRoleMenuGet = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysScheduleAdd, XTestSysScheduleAddRequest defined TODO
var XTestSysScheduleAdd, XTestSysScheduleAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysScheduleAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysScheduleAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysScheduleBatchAdd, XTestSysScheduleBatchAddRequest defined TODO
var XTestSysScheduleBatchAdd, XTestSysScheduleBatchAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysScheduleBatchAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysScheduleBatchAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysScheduleDel, XTestSysScheduleDelRequest defined TODO
var XTestSysScheduleDel, XTestSysScheduleDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysScheduleDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysScheduleDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysScheduleBatchDel, XTestSysScheduleBatchDelRequest defined TODO
var XTestSysScheduleBatchDel, XTestSysScheduleBatchDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysScheduleBatchDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysScheduleBatchDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysScheduleUpdate, XTestSysScheduleUpdateRequest defined TODO
var XTestSysScheduleUpdate, XTestSysScheduleUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysScheduleUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysScheduleUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysScheduleBatchUpdate, XTestSysScheduleBatchUpdateRequest defined TODO
var XTestSysScheduleBatchUpdate, XTestSysScheduleBatchUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysScheduleBatchUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysScheduleBatchUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysSchedulePage, XTestSysSchedulePageRequest defined TODO
var XTestSysSchedulePage, XTestSysSchedulePageRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysSchedulePage = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysSchedulePage = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysScheduleGet, XTestSysScheduleGetRequest defined TODO
var XTestSysScheduleGet, XTestSysScheduleGetRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysScheduleGet = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysScheduleGet = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysScheduleHistoryPage, XTestSysScheduleHistoryPageRequest defined TODO
var XTestSysScheduleHistoryPage, XTestSysScheduleHistoryPageRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysScheduleHistoryPage = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysScheduleHistoryPage = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysSchedulingAdd, XTestSysSchedulingAddRequest defined TODO
var XTestSysSchedulingAdd, XTestSysSchedulingAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysSchedulingAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysSchedulingAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysSchedulingDel, XTestSysSchedulingDelRequest defined TODO
var XTestSysSchedulingDel, XTestSysSchedulingDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysSchedulingDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysSchedulingDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysSchedulingUpdate, XTestSysSchedulingUpdateRequest defined TODO
var XTestSysSchedulingUpdate, XTestSysSchedulingUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysSchedulingUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysSchedulingUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysSchedulingPage, XTestSysSchedulingPageRequest defined TODO
var XTestSysSchedulingPage, XTestSysSchedulingPageRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysSchedulingPage = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysSchedulingPage = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysSchedulingGet, XTestSysSchedulingGetRequest defined TODO
var XTestSysSchedulingGet, XTestSysSchedulingGetRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysSchedulingGet = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysSchedulingGet = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysSettingAdd, XTestSysSettingAddRequest defined TODO
var XTestSysSettingAdd, XTestSysSettingAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysSettingAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysSettingAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysSettingBatchAdd, XTestSysSettingBatchAddRequest defined TODO
var XTestSysSettingBatchAdd, XTestSysSettingBatchAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysSettingBatchAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysSettingBatchAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysSettingDel, XTestSysSettingDelRequest defined TODO
var XTestSysSettingDel, XTestSysSettingDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysSettingDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysSettingDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysSettingBatchDel, XTestSysSettingBatchDelRequest defined TODO
var XTestSysSettingBatchDel, XTestSysSettingBatchDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysSettingBatchDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysSettingBatchDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysSettingUpdate, XTestSysSettingUpdateRequest defined TODO
var XTestSysSettingUpdate, XTestSysSettingUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysSettingUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysSettingUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysSettingBatchUpdate, XTestSysSettingBatchUpdateRequest defined TODO
var XTestSysSettingBatchUpdate, XTestSysSettingBatchUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysSettingBatchUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysSettingBatchUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysSettingPage, XTestSysSettingPageRequest defined TODO
var XTestSysSettingPage, XTestSysSettingPageRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysSettingPage = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysSettingPage = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysSettingGet, XTestSysSettingGetRequest defined TODO
var XTestSysSettingGet, XTestSysSettingGetRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysSettingGet = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysSettingGet = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTableAdd, XTestSysTableAddRequest defined TODO
var XTestSysTableAdd, XTestSysTableAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTableAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTableAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTableBatchAdd, XTestSysTableBatchAddRequest defined TODO
var XTestSysTableBatchAdd, XTestSysTableBatchAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTableBatchAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTableBatchAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTableDel, XTestSysTableDelRequest defined TODO
var XTestSysTableDel, XTestSysTableDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTableDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTableDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTableBatchDel, XTestSysTableBatchDelRequest defined TODO
var XTestSysTableBatchDel, XTestSysTableBatchDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTableBatchDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTableBatchDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTableUpdate, XTestSysTableUpdateRequest defined TODO
var XTestSysTableUpdate, XTestSysTableUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTableUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTableUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTableBatchUpdate, XTestSysTableBatchUpdateRequest defined TODO
var XTestSysTableBatchUpdate, XTestSysTableBatchUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTableBatchUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTableBatchUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTablePage, XTestSysTablePageRequest defined TODO
var XTestSysTablePage, XTestSysTablePageRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTablePage = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTablePage = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTableGet, XTestSysTableGetRequest defined TODO
var XTestSysTableGet, XTestSysTableGetRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTableGet = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTableGet = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTableColumnAdd, XTestSysTableColumnAddRequest defined TODO
var XTestSysTableColumnAdd, XTestSysTableColumnAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTableColumnAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTableColumnAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTableColumnBatchAdd, XTestSysTableColumnBatchAddRequest defined TODO
var XTestSysTableColumnBatchAdd, XTestSysTableColumnBatchAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTableColumnBatchAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTableColumnBatchAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTableColumnDel, XTestSysTableColumnDelRequest defined TODO
var XTestSysTableColumnDel, XTestSysTableColumnDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTableColumnDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTableColumnDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTableColumnBatchDel, XTestSysTableColumnBatchDelRequest defined TODO
var XTestSysTableColumnBatchDel, XTestSysTableColumnBatchDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTableColumnBatchDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTableColumnBatchDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTableColumnUpdate, XTestSysTableColumnUpdateRequest defined TODO
var XTestSysTableColumnUpdate, XTestSysTableColumnUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTableColumnUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTableColumnUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTableColumnBatchUpdate, XTestSysTableColumnBatchUpdateRequest defined TODO
var XTestSysTableColumnBatchUpdate, XTestSysTableColumnBatchUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTableColumnBatchUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTableColumnBatchUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTableColumnPage, XTestSysTableColumnPageRequest defined TODO
var XTestSysTableColumnPage, XTestSysTableColumnPageRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTableColumnPage = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTableColumnPage = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTableColumnGet, XTestSysTableColumnGetRequest defined TODO
var XTestSysTableColumnGet, XTestSysTableColumnGetRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTableColumnGet = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTableColumnGet = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTagAdd, XTestSysTagAddRequest defined TODO
var XTestSysTagAdd, XTestSysTagAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTagAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTagAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTagBatchAdd, XTestSysTagBatchAddRequest defined TODO
var XTestSysTagBatchAdd, XTestSysTagBatchAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTagBatchAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTagBatchAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTagDel, XTestSysTagDelRequest defined TODO
var XTestSysTagDel, XTestSysTagDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTagDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTagDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTagBatchDel, XTestSysTagBatchDelRequest defined TODO
var XTestSysTagBatchDel, XTestSysTagBatchDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTagBatchDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTagBatchDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTagUpdate, XTestSysTagUpdateRequest defined TODO
var XTestSysTagUpdate, XTestSysTagUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTagUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTagUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTagBatchUpdate, XTestSysTagBatchUpdateRequest defined TODO
var XTestSysTagBatchUpdate, XTestSysTagBatchUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTagBatchUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTagBatchUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTagPage, XTestSysTagPageRequest defined TODO
var XTestSysTagPage, XTestSysTagPageRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTagPage = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTagPage = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTagGet, XTestSysTagGetRequest defined TODO
var XTestSysTagGet, XTestSysTagGetRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTagGet = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTagGet = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTagGroupAdd, XTestSysTagGroupAddRequest defined TODO
var XTestSysTagGroupAdd, XTestSysTagGroupAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTagGroupAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTagGroupAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTagGroupBatchAdd, XTestSysTagGroupBatchAddRequest defined TODO
var XTestSysTagGroupBatchAdd, XTestSysTagGroupBatchAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTagGroupBatchAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTagGroupBatchAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTagGroupDel, XTestSysTagGroupDelRequest defined TODO
var XTestSysTagGroupDel, XTestSysTagGroupDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTagGroupDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTagGroupDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTagGroupBatchDel, XTestSysTagGroupBatchDelRequest defined TODO
var XTestSysTagGroupBatchDel, XTestSysTagGroupBatchDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTagGroupBatchDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTagGroupBatchDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTagGroupUpdate, XTestSysTagGroupUpdateRequest defined TODO
var XTestSysTagGroupUpdate, XTestSysTagGroupUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTagGroupUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTagGroupUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTagGroupBatchUpdate, XTestSysTagGroupBatchUpdateRequest defined TODO
var XTestSysTagGroupBatchUpdate, XTestSysTagGroupBatchUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTagGroupBatchUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTagGroupBatchUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTagGroupPage, XTestSysTagGroupPageRequest defined TODO
var XTestSysTagGroupPage, XTestSysTagGroupPageRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTagGroupPage = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTagGroupPage = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTagGroupGet, XTestSysTagGroupGetRequest defined TODO
var XTestSysTagGroupGet, XTestSysTagGroupGetRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTagGroupGet = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTagGroupGet = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTrackerPage, XTestSysTrackerPageRequest defined TODO
var XTestSysTrackerPage, XTestSysTrackerPageRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTrackerPage = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTrackerPage = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysTrackerGet, XTestSysTrackerGetRequest defined TODO
var XTestSysTrackerGet, XTestSysTrackerGetRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysTrackerGet = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysTrackerGet = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysUserAdd, XTestSysUserAddRequest defined TODO
var XTestSysUserAdd, XTestSysUserAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysUserAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysUserAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysUserBatchAdd, XTestSysUserBatchAddRequest defined TODO
var XTestSysUserBatchAdd, XTestSysUserBatchAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysUserBatchAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysUserBatchAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysUserDel, XTestSysUserDelRequest defined TODO
var XTestSysUserDel, XTestSysUserDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysUserDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysUserDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysUserBatchDel, XTestSysUserBatchDelRequest defined TODO
var XTestSysUserBatchDel, XTestSysUserBatchDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysUserBatchDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysUserBatchDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysUserUpdate, XTestSysUserUpdateRequest defined TODO
var XTestSysUserUpdate, XTestSysUserUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysUserUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysUserUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysUserBatchUpdate, XTestSysUserBatchUpdateRequest defined TODO
var XTestSysUserBatchUpdate, XTestSysUserBatchUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysUserBatchUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysUserBatchUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysUserPage, XTestSysUserPageRequest defined TODO
var XTestSysUserPage, XTestSysUserPageRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysUserPage = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysUserPage = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysUserGet, XTestSysUserGetRequest defined TODO
var XTestSysUserGet, XTestSysUserGetRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysUserGet = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysUserGet = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysUserLogout, XTestSysUserLogoutRequest defined TODO
var XTestSysUserLogout, XTestSysUserLogoutRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysUserLogout = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysUserLogout = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysUserTemplateAdd, XTestSysUserTemplateAddRequest defined TODO
var XTestSysUserTemplateAdd, XTestSysUserTemplateAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysUserTemplateAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysUserTemplateAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysUserTemplateBatchAdd, XTestSysUserTemplateBatchAddRequest defined TODO
var XTestSysUserTemplateBatchAdd, XTestSysUserTemplateBatchAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysUserTemplateBatchAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysUserTemplateBatchAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysUserTemplateDel, XTestSysUserTemplateDelRequest defined TODO
var XTestSysUserTemplateDel, XTestSysUserTemplateDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysUserTemplateDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysUserTemplateDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysUserTemplateBatchDel, XTestSysUserTemplateBatchDelRequest defined TODO
var XTestSysUserTemplateBatchDel, XTestSysUserTemplateBatchDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysUserTemplateBatchDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysUserTemplateBatchDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysUserTemplateUpdate, XTestSysUserTemplateUpdateRequest defined TODO
var XTestSysUserTemplateUpdate, XTestSysUserTemplateUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysUserTemplateUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysUserTemplateUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysUserTemplateBatchUpdate, XTestSysUserTemplateBatchUpdateRequest defined TODO
var XTestSysUserTemplateBatchUpdate, XTestSysUserTemplateBatchUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysUserTemplateBatchUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysUserTemplateBatchUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysUserTemplatePage, XTestSysUserTemplatePageRequest defined TODO
var XTestSysUserTemplatePage, XTestSysUserTemplatePageRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysUserTemplatePage = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysUserTemplatePage = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysUserTemplateGet, XTestSysUserTemplateGetRequest defined TODO
var XTestSysUserTemplateGet, XTestSysUserTemplateGetRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysUserTemplateGet = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysUserTemplateGet = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysUserTemplateDetailAdd, XTestSysUserTemplateDetailAddRequest defined TODO
var XTestSysUserTemplateDetailAdd, XTestSysUserTemplateDetailAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysUserTemplateDetailAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysUserTemplateDetailAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysUserTemplateDetailBatchAdd, XTestSysUserTemplateDetailBatchAddRequest defined TODO
var XTestSysUserTemplateDetailBatchAdd, XTestSysUserTemplateDetailBatchAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysUserTemplateDetailBatchAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysUserTemplateDetailBatchAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysUserTemplateDetailDel, XTestSysUserTemplateDetailDelRequest defined TODO
var XTestSysUserTemplateDetailDel, XTestSysUserTemplateDetailDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysUserTemplateDetailDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysUserTemplateDetailDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysUserTemplateDetailBatchDel, XTestSysUserTemplateDetailBatchDelRequest defined TODO
var XTestSysUserTemplateDetailBatchDel, XTestSysUserTemplateDetailBatchDelRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysUserTemplateDetailBatchDel = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysUserTemplateDetailBatchDel = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysUserTemplateDetailUpdate, XTestSysUserTemplateDetailUpdateRequest defined TODO
var XTestSysUserTemplateDetailUpdate, XTestSysUserTemplateDetailUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysUserTemplateDetailUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysUserTemplateDetailUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysUserTemplateDetailBatchUpdate, XTestSysUserTemplateDetailBatchUpdateRequest defined TODO
var XTestSysUserTemplateDetailBatchUpdate, XTestSysUserTemplateDetailBatchUpdateRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysUserTemplateDetailBatchUpdate = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysUserTemplateDetailBatchUpdate = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysUserTemplateDetailPage, XTestSysUserTemplateDetailPageRequest defined TODO
var XTestSysUserTemplateDetailPage, XTestSysUserTemplateDetailPageRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysUserTemplateDetailPage = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysUserTemplateDetailPage = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysUserTemplateDetailGet, XTestSysUserTemplateDetailGetRequest defined TODO
var XTestSysUserTemplateDetailGet, XTestSysUserTemplateDetailGetRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysUserTemplateDetailGet = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysUserTemplateDetailGet = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysWechatOauth2, XTestSysWechatOauth2Request defined TODO
var XTestSysWechatOauth2, XTestSysWechatOauth2Request = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysWechatOauth2 = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysWechatOauth2 = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysWorkerAdd, XTestSysWorkerAddRequest defined TODO
var XTestSysWorkerAdd, XTestSysWorkerAddRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysWorkerAdd = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysWorkerAdd = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

// XTestSysWorkerGet, XTestSysWorkerGetRequest defined TODO
var XTestSysWorkerGet, XTestSysWorkerGetRequest = func(ctx *xtest.Context) {
	if ctx.Code != 200 {
		ctx.Errorf("XTestSysWorkerGet = %v want %v", ctx.Code, 200)
	}
	rsp, err := ctx.Body()
	if err != nil {
		ctx.Error(err)
	}
	if rsp.Code != 200 {
		ctx.Errorf("XTestSysWorkerGet = %v want %v", rsp.Code, 200)
	}
}, map[string]interface{}{}

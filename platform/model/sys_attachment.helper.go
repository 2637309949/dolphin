// Code generated by dol build. DO NOT EDIT.
// source: auto.go

package model

import (
	"github.com/2637309949/dolphin/packages/null"
	"github.com/2637309949/dolphin/packages/xormplus/xorm"
	// "os"
)

// Persist table name of defined SysAttachment
func (m *SysAttachment) Persist(db *xorm.Session, ids ...string) (int64, error) {
	return db.In("id", ids).Update(&SysAttachment{
		Durable: null.IntFrom(1),
	})
}

// PersistFile table name of defined SysAttachment
func (m *SysAttachment) PersistFile(db *xorm.Session, cb func([]SysAttachment) error, ids ...string) (int64, error) {
	var files []SysAttachment
	if cb == nil {
		cb = func(files []SysAttachment) error {
			return nil
		}
	}
	err := db.In("id", ids).Find(&files)
	if err != nil {
		db.Rollback()
		return 0, err
	}
	err = cb(files)
	if err != nil {
		db.Rollback()
		return 0, err
	}
	cnt, err := db.In("id", ids).Update(&SysAttachment{
		Durable: null.IntFrom(1),
	})
	if err != nil {
		db.Rollback()
		return 0, err
	}
	return cnt, err
}

// Remove table name of defined SysAttachment
func (m *SysAttachment) Remove(db *xorm.Session, ids ...string) (int64, error) {
	return db.In("id", ids).Update(&SysAttachment{
		IsDelete: null.IntFrom(1),
	})
}

// RemoveFile table name of defined SysAttachment
func (m *SysAttachment) RemoveFile(db *xorm.Session, cb func([]SysAttachment) error, ids ...string) (int64, error) {
	var files []SysAttachment
	if cb == nil {
		cb = func(files []SysAttachment) error {
			// for i := range files {
			// 	err := os.Remove(files[i].Path.String)
			// 	if err != nil {
			// 		return err
			// 	}
			// }
			return nil
		}
	}
	err := db.In("id", ids).Find(&files)
	if err != nil {
		db.Rollback()
		return 0, err
	}
	err = cb(files)
	if err != nil {
		db.Rollback()
		return 0, err
	}
	cnt, err := db.In("id", ids).Update(&SysAttachment{
		IsDelete: null.IntFrom(1),
	})
	if err != nil {
		db.Rollback()
		return 0, err
	}
	return cnt, err
}

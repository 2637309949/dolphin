// Code generated by dol build. DO NOT EDIT.
// source: auto.go

package model

import (
	"reflect"

	"github.com/2637309949/dolphin/packages/null"
	"github.com/2637309949/dolphin/packages/xormplus/xorm"
	"github.com/2637309949/dolphin/packages/xormplus/xorm/caches"
	"github.com/2637309949/dolphin/packages/xormplus/xorm/tags"
)

// SysTracker defined 日志跟踪
type SysTracker struct {
	// 主键
	ID null.String `xorm:"varchar(36) notnull unique pk comment('主键') 'id'" json:"id" form:"id" xml:"id"`
	// 令牌
	Token null.String `xorm:"varchar(72) comment('令牌') 'token'" json:"token" form:"token" xml:"token"`
	// 用户ID
	UserId null.String `xorm:"varchar(36) comment('用户ID') 'user_id'" json:"user_id" form:"user_id" xml:"user_id"`
	// 状态
	StatusCode null.Int `xorm:"int comment('状态') 'status_code'" json:"status_code" form:"status_code" xml:"status_code"`
	// 反应时间
	Latency null.Float `xorm:"float comment('反应时间') 'latency'" json:"latency" form:"latency" xml:"latency"`
	// 客户端id
	ClientIp null.String `xorm:"varchar(36) comment('客户端id') 'client_ip'" json:"client_ip" form:"client_ip" xml:"client_ip"`
	// 请求方法
	Method null.String `xorm:"varchar(36) comment('请求方法') 'method'" json:"method" form:"method" xml:"method"`
	// 请求路径
	Path null.String `xorm:"varchar(512) comment('请求路径') 'path'" json:"path" form:"path" xml:"path"`
	// 请求头
	Header []byte `xorm:"blob comment('请求头') 'header'" json:"header" form:"header" xml:"header"`
	// 请求体
	ReqBody []byte `xorm:"mediumblob comment('请求体') 'req_body'" json:"req_body" form:"req_body" xml:"req_body"`
	// 返回体
	ResBody []byte `xorm:"mediumblob comment('返回体') 'res_body'" json:"res_body" form:"res_body" xml:"res_body"`
	// 创建人
	CreateBy null.String `xorm:"varchar(36) notnull comment('创建人') 'create_by'" json:"create_by" form:"create_by" xml:"create_by"`
	// 创建时间
	CreateTime null.Time `xorm:"datetime notnull comment('创建时间') 'create_time'" json:"create_time" form:"create_time" xml:"create_time"`
	// 最后更新人
	UpdateBy null.String `xorm:"varchar(36) notnull comment('最后更新人') 'update_by'" json:"update_by" form:"update_by" xml:"update_by"`
	// 最后更新时间
	UpdateTime null.Time `xorm:"datetime notnull comment('最后更新时间') 'update_time'" json:"update_time" form:"update_time" xml:"update_time"`
	// 删除标记
	DelFlag null.Int `xorm:"notnull comment('删除标记') 'del_flag'" json:"del_flag" form:"del_flag" xml:"del_flag"`
	// 备注
	Remark null.String `xorm:"varchar(200) comment('备注') 'remark'" json:"remark" form:"remark" xml:"remark"`
}

// Parser defined
func (m *SysTracker) Parser(db *xorm.Engine) *tags.Parser {
	return tags.NewParser("xorm", db.Dialect(), db.DB().Mapper, db.DB().Mapper, caches.NewManager())
}

// PrimaryKeys defined
func (m *SysTracker) PrimaryKeys(db *xorm.Engine) ([]string, error) {
	v := reflect.Indirect(reflect.ValueOf(m))
	table, err := m.Parser(db).Parse(v)
	return table.PrimaryKeys, err
}

// TableName table name of defined SysTracker
func (m *SysTracker) TableName() string {
	return "sys_tracker"
}

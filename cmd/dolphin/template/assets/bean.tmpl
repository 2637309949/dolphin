// Code generated by dol build. DO NOT EDIT.
// source: auto.go

package {{$.Viper.GetString "dir.types" }}

{{.Bean.Import .Bean.Packages}}

// {{.Bean.ToUpperCase .Bean.Name}} defined {{.Bean.Desc}} 
type {{.Bean.ToUpperCase .Bean.Name}} struct {
	{{- if ne .Bean.Extends ""}}
	{{- $ext:= .Bean.SplitExtends .Bean.Extends }}
	{{- range $ext }}
	*{{.}}
	{{- end}}
	{{- end}}
	{{- range .Bean.Props}}
	// {{.Desc}}
	{{.ToUpperCase .Name}} {{.SRef .Type}} `json:"{{- if ne .JSON ""}}{{.JSON}}{{- else}}{{.Name}}{{- end}}" xml:"{{.Name}}"{{- if ne .Example ""}} example:"{{.Example}}"{{- end}}`
	{{- end}}
}

func (r *{{.Bean.ToUpperCase .Bean.Name}}) Marshal() ([]byte, error) {
	return json.Marshal(r)
}

func Unmarshal{{.Bean.ToUpperCase .Bean.Name}}(data []byte) ({{.Bean.ToUpperCase .Bean.Name}}, error) {
	var r {{.Bean.ToUpperCase .Bean.Name}}
	err := json.Unmarshal(data, &r)
	return r, err
}
